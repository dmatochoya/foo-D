{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport actionTypes from \"./actionTypes\";\nvar groceryListUrl = 'http://192.168.0.17:2000/list';\nexport function getProductTypeFromFoodDBSuccess(product) {\n  return {\n    type: actionTypes.GET_PRODUCT_TYPE,\n    product: product\n  };\n}\nexport function getProductTypeFromFoodDB(product) {\n  return function _callee(dispatch) {\n    var _await$axios$get, data;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(groceryListUrl, {\n              params: {\n                product: product\n              }\n            }));\n\n          case 3:\n            _await$axios$get = _context.sent;\n            data = _await$axios$get.data;\n\n            if (!data.length) {\n              data = [{\n                product: product,\n                type: 'uncategorized'\n              }];\n            }\n\n            dispatch(getProductTypeFromFoodDBSuccess(data));\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n}\nexport function deleteAllProductsFromGorceryList() {\n  return {\n    type: actionTypes.DELETE_ALL_PRODUCTS\n  };\n}\nexport function deleteProductFromGorceryList(productName) {\n  return {\n    type: actionTypes.DELETE_PRODUCT,\n    productName: productName\n  };\n}","map":{"version":3,"sources":["/Users/davidmatochoya/Desktop/david-final-project/client/src/redux/actions/groceryListActions.tsx"],"names":["axios","actionTypes","groceryListUrl","getProductTypeFromFoodDBSuccess","product","type","GET_PRODUCT_TYPE","getProductTypeFromFoodDB","dispatch","get","params","data","length","console","log","deleteAllProductsFromGorceryList","DELETE_ALL_PRODUCTS","deleteProductFromGorceryList","productName","DELETE_PRODUCT"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP;AAEA,IAAMC,cAAc,GAAG,+BAAvB;AAEA,OAAO,SAASC,+BAAT,CAAyCC,OAAzC,EAA0D;AAC/D,SAAO;AACLC,IAAAA,IAAI,EAAEJ,WAAW,CAACK,gBADb;AAELF,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID;AAED,OAAO,SAASG,wBAAT,CAAkCH,OAAlC,EAAmD;AACxD,SAAO,iBAAOI,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEkBR,KAAK,CAACS,GAAN,CAAUP,cAAV,EAA0B;AAAEQ,cAAAA,MAAM,EAAE;AAAEN,gBAAAA,OAAO,EAAPA;AAAF;AAAV,aAA1B,CAFlB;;AAAA;AAAA;AAEGO,YAAAA,IAFH,oBAEGA,IAFH;;AAGH,gBAAI,CAACA,IAAI,CAACC,MAAV,EAAkB;AAChBD,cAAAA,IAAI,GAAG,CAAC;AAAEP,gBAAAA,OAAO,EAAPA,OAAF;AAAWC,gBAAAA,IAAI,EAAE;AAAjB,eAAD,CAAP;AACD;;AACDG,YAAAA,QAAQ,CAACL,+BAA+B,CAACQ,IAAD,CAAhC,CAAR;AANG;AAAA;;AAAA;AAAA;AAAA;AAQHE,YAAAA,OAAO,CAACC,GAAR;;AARG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAWD;AAED,OAAO,SAASC,gCAAT,GAA4C;AACjD,SAAO;AACLV,IAAAA,IAAI,EAAEJ,WAAW,CAACe;AADb,GAAP;AAGD;AAED,OAAO,SAASC,4BAAT,CAAsCC,WAAtC,EAA2D;AAChE,SAAO;AACLb,IAAAA,IAAI,EAAEJ,WAAW,CAACkB,cADb;AAELD,IAAAA,WAAW,EAAXA;AAFK,GAAP;AAID","sourcesContent":["import axios from 'axios';\nimport actionTypes from './actionTypes';\n\nconst groceryListUrl = 'http://192.168.0.17:2000/list';\n\nexport function getProductTypeFromFoodDBSuccess(product: object) {\n  return {\n    type: actionTypes.GET_PRODUCT_TYPE,\n    product,\n  };\n}\n\nexport function getProductTypeFromFoodDB(product: string) {\n  return async (dispatch: (arg0: { type: string; product: object; }) => void) => {\n    try {\n      let { data } = await axios.get(groceryListUrl, { params: { product } });\n      if (!data.length) {\n        data = [{ product, type: 'uncategorized' }];\n      }\n      dispatch(getProductTypeFromFoodDBSuccess(data));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n\nexport function deleteAllProductsFromGorceryList() {\n  return {\n    type: actionTypes.DELETE_ALL_PRODUCTS,\n  };\n}\n\nexport function deleteProductFromGorceryList(productName: string) {\n  return {\n    type: actionTypes.DELETE_PRODUCT,\n    productName,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}