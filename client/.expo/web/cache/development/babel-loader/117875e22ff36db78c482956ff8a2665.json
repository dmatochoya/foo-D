{"ast":null,"code":"var _jsxFileName = \"/Users/davidmatochoya/Desktop/david-final-project/client/components/Detail/Detail.tsx\";\nimport React, { useEffect } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { getRecipeFromAPI } from \"../../redux/actions/recipesActions\";\n\nfunction Detail(_ref) {\n  var _this = this;\n\n  var recipe = _ref.recipe,\n      actions = _ref.actions;\n  var recipeReducerStateLength = Object.keys(recipe).length;\n  var uri;\n  var recipeName;\n\n  var getRecipeNameAndPhoto = function getRecipeNameAndPhoto() {\n    uri = recipe.meals[0].strMealThumb;\n    recipeName = recipe.meals[0].strMeal;\n  };\n\n  var ingredients = [];\n\n  var addIngredients = function addIngredients() {\n    for (var i = 1; i < 21; i += 1) {\n      var ingredient = recipe.meals[0][\"strIngredient\" + i];\n\n      if (ingredient) {\n        ingredients.push(React.createElement(View, {\n          key: i,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: {\n            padding: '50'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          borderRadius: 50,\n          style: {\n            height: 60,\n            width: 60,\n            backgroundColor: 'rgb(23, 153, 158)'\n          },\n          source: {\n            uri: \"https://www.themealdb.com/images/ingredients/\" + ingredient + \".png\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }\n        })), React.createElement(Text, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }\n        }, ingredient)));\n      }\n    }\n  };\n\n  if (recipeReducerStateLength) {\n    getRecipeNameAndPhoto();\n    addIngredients();\n  }\n\n  useEffect(function () {\n    if (!recipeReducerStateLength) {\n      actions.getRecipeFromAPI();\n    }\n  }, [recipeReducerStateLength]);\n\n  var _Dimensions$get = Dimensions.get('window'),\n      height = _Dimensions$get.height;\n\n  var whiteBoxHeight = Dimensions.get('window').height - 280;\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    backgroundColor: \"black\",\n    barStyle: \"light-content\",\n    translucent: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: {\n      height: height - 40\n    },\n    source: {\n      uri: uri\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), React.createElement(LinearGradient, {\n    colors: ['transparent', 'rgb(250, 250, 250)'],\n    style: {\n      position: 'absolute',\n      top: whiteBoxHeight,\n      backgroundColor: 'linear-gradient(45deg, rgba(250, 250, 250, 0.4), rgba(250, 250, 250, 0))',\n      width: '100%',\n      height: 240,\n      alignItems: 'center',\n      paddingTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'black',\n      fontSize: 30,\n      fontWeight: 'bold',\n      textShadowColor: 'rgba(250, 250, 250, 0.5)',\n      textShadowOffset: {\n        width: -1,\n        height: 1\n      },\n      textShadowRadius: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, recipeName))), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 30,\n      fontWeight: 'bold',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Ingredients\"), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      flexWrap: 'wrap'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, ingredients))), React.createElement(View, {\n    style: {\n      position: 'absolute',\n      top: 0,\n      zIndex: 1,\n      marginTop: StatusBar.currentHeight,\n      width: '100%',\n      backgroundColor: 'rgb(230, 84, 84)',\n      paddingHorizontal: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, React.createElement(Ionicons, {\n    size: 40,\n    style: {\n      color: 'white'\n    },\n    name: \"ios-arrow-round-back\",\n    type: \"ionicons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction mapStateToProps(_ref2) {\n  var recipesReducer = _ref2.recipesReducer;\n  return {\n    recipe: recipesReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      getRecipeFromAPI: getRecipeFromAPI\n    }, dispatch)\n  };\n}\n\nDetail.propTypes = {\n  recipe: PropTypes.shape({\n    meals: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired,\n  actions: PropTypes.shape({\n    getRecipeFromAPI: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail);","map":{"version":3,"sources":["/Users/davidmatochoya/Desktop/david-final-project/client/components/Detail/Detail.tsx"],"names":["React","useEffect","Ionicons","LinearGradient","connect","bindActionCreators","PropTypes","getRecipeFromAPI","Detail","recipe","actions","recipeReducerStateLength","Object","keys","length","uri","recipeName","getRecipeNameAndPhoto","meals","strMealThumb","strMeal","ingredients","addIngredients","i","ingredient","push","padding","height","width","backgroundColor","Dimensions","get","whiteBoxHeight","position","top","alignItems","paddingTop","color","fontSize","fontWeight","textShadowColor","textShadowOffset","textShadowRadius","textAlign","flexDirection","flexWrap","zIndex","marginTop","StatusBar","currentHeight","paddingHorizontal","mapStateToProps","recipesReducer","mapDispatchToProps","dispatch","propTypes","shape","arrayOf","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport {\n  Dimensions, Text, ScrollView, View, StatusBar, Image,\n} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { getRecipeFromAPI } from '../../redux/actions/recipesActions';\n// import Constants from 'expo-constants';\n/* statusBarHeight */\n\nfunction Detail({ recipe, actions } : { recipe: Object, actions:Object}) {\n  const recipeReducerStateLength = Object.keys(recipe).length;\n\n  let uri;\n  let recipeName;\n  const getRecipeNameAndPhoto = () => {\n    uri = recipe.meals[0].strMealThumb;\n    recipeName = recipe.meals[0].strMeal;\n  };\n\n  // eslint-disable-next-line no-undef\n  const ingredients: JSX.Element[] = [];\n  const addIngredients = () => {\n    for (let i = 1; i < 21; i += 1) {\n      const ingredient = recipe.meals[0][`strIngredient${i}`];\n      if (ingredient) {\n        ingredients.push(\n          <View key={i}>\n            <View style={{ padding: '50' }}>\n              <Image\n                borderRadius={50}\n                style={{\n                  height: 60, width: 60, backgroundColor: 'rgb(23, 153, 158)',\n                }}\n                source={{ uri: `https://www.themealdb.com/images/ingredients/${ingredient}.png` }}\n              />\n            </View>\n            <Text>{ingredient}</Text>\n          </View>,\n        );\n      }\n    }\n  };\n\n  if (recipeReducerStateLength) {\n    getRecipeNameAndPhoto();\n    addIngredients();\n  }\n\n  useEffect(() => {\n    if (!recipeReducerStateLength) {\n      actions.getRecipeFromAPI();\n    }\n  }, [recipeReducerStateLength]);\n\n  const { height } = Dimensions.get('window');\n  const whiteBoxHeight = Dimensions.get('window').height - 280;\n\n  return (\n\n    <View>\n      <StatusBar backgroundColor=\"black\" barStyle=\"light-content\" translucent />\n      <ScrollView showsVerticalScrollIndicator={false}>\n        <View>\n          <Image style={{ height: height - 40 }} source={{ uri }} />\n          <LinearGradient\n            colors={['transparent', 'rgb(250, 250, 250)']}\n            style={{\n              position: 'absolute', top: whiteBoxHeight, backgroundColor: 'linear-gradient(45deg, rgba(250, 250, 250, 0.4), rgba(250, 250, 250, 0))', width: '100%', height: 240, alignItems: 'center', paddingTop: 10,\n            }}\n          >\n            <Text style={{\n              color: 'black',\n              fontSize: 30,\n              fontWeight: 'bold',\n              textShadowColor: 'rgba(250, 250, 250, 0.5)',\n              textShadowOffset: { width: -1, height: 1 },\n              textShadowRadius: 10,\n            }}\n            >\n              {recipeName}\n            </Text>\n          </LinearGradient>\n        </View>\n        <View>\n          <Text style={{ fontSize: 30, fontWeight: 'bold', textAlign: 'center' }}>Ingredients</Text>\n          <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n            {ingredients}\n          </View>\n        </View>\n      </ScrollView>\n      <View\n        style={{\n          position: 'absolute', top: 0, zIndex: 1, marginTop: StatusBar.currentHeight, width: '100%', backgroundColor: 'rgb(230, 84, 84)', paddingHorizontal: 10,\n        }}\n      >\n        <Ionicons\n          size={40}\n          style={{\n            color: 'white',\n          }}\n          name=\"ios-arrow-round-back\"\n          type=\"ionicons\"\n        />\n      </View>\n    </View>\n  );\n}\n\nfunction mapStateToProps({ recipesReducer } : { recipesReducer: Object}) {\n  return {\n    recipe: recipesReducer,\n  };\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n  return {\n    actions: bindActionCreators({ getRecipeFromAPI }, dispatch),\n  };\n}\n\nDetail.propTypes = {\n  recipe: PropTypes.shape({\n    meals: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n  actions: PropTypes.shape({\n    getRecipeFromAPI: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail);\n"]},"metadata":{},"sourceType":"module"}