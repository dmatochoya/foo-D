{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport actionTypes from \"./actionTypes\";\nvar recipesUrl = 'http://192.168.0.17:2000/recipes';\nexport function getRecipeFromAPISuccess(recipe) {\n  return {\n    type: actionTypes.GET_RECIPE,\n    recipe: recipe\n  };\n}\nexport function getRecipeFromAPI() {\n  return function _callee(dispatch) {\n    var _await$axios$get, data;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(recipesUrl));\n\n          case 3:\n            _await$axios$get = _context.sent;\n            data = _await$axios$get.data;\n            dispatch(getRecipeFromAPISuccess(data));\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n}\nexport function getRecipeByNameFromAPISuccess(recipe) {\n  return {\n    type: actionTypes.GET_RECIPE_BY_NAME,\n    recipe: recipe\n  };\n}\nexport function getCategoryRecipeByNameFromAPISuccess(recipe) {\n  return {\n    type: actionTypes.GET_CATEGORY_RECIPE_BY_NAME,\n    recipe: recipe\n  };\n}\nexport function getRecipeByNameFromAPI(name, isCategorySearch) {\n  return function _callee2(dispatch) {\n    var _await$axios$get2, data;\n\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(recipesUrl + \"/\" + name, {\n              name: name\n            }));\n\n          case 3:\n            _await$axios$get2 = _context2.sent;\n            data = _await$axios$get2.data;\n\n            if (isCategorySearch) {\n              dispatch(getCategoryRecipeByNameFromAPISuccess(data));\n            } else {\n              dispatch(getRecipeByNameFromAPISuccess(data));\n            }\n\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n}\nexport function restoreSearchReducer() {\n  return {\n    type: actionTypes.RESTORE_SEARCH_REDUCER\n  };\n}\nexport function getRecipeCategoriesFromAPISuccess(categories) {\n  return {\n    type: actionTypes.GET_RECIPE_CATEGORIES,\n    categories: categories\n  };\n}\nexport function getRecipeCategoriesFromAPI(name) {\n  return function _callee3(dispatch) {\n    var _await$axios$get3, data;\n\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(recipesUrl + \"/categories\"));\n\n          case 3:\n            _await$axios$get3 = _context3.sent;\n            data = _await$axios$get3.data;\n            dispatch(getRecipeCategoriesFromAPISuccess(data));\n            _context3.next = 11;\n            break;\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n}\nexport function getCategoryRecipesFromAPISuccess(categoryRecipes) {\n  return {\n    type: actionTypes.GET_CATEGORY_RECIPES,\n    categoryRecipes: categoryRecipes\n  };\n}\nexport function getCategoryRecipesFromAPI(category) {\n  return function _callee4(dispatch) {\n    var _await$axios$get4, data;\n\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(recipesUrl + \"/categories/\" + category));\n\n          case 3:\n            _await$axios$get4 = _context4.sent;\n            data = _await$axios$get4.data;\n            dispatch(getCategoryRecipesFromAPISuccess(data));\n            _context4.next = 11;\n            break;\n\n          case 8:\n            _context4.prev = 8;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.log(_context4.t0);\n\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n}","map":{"version":3,"sources":["/Users/davidmatochoya/Desktop/david-final-project/client/redux/actions/recipesActions.tsx"],"names":["axios","actionTypes","recipesUrl","getRecipeFromAPISuccess","recipe","type","GET_RECIPE","getRecipeFromAPI","dispatch","get","data","console","log","getRecipeByNameFromAPISuccess","GET_RECIPE_BY_NAME","getCategoryRecipeByNameFromAPISuccess","GET_CATEGORY_RECIPE_BY_NAME","getRecipeByNameFromAPI","name","isCategorySearch","restoreSearchReducer","RESTORE_SEARCH_REDUCER","getRecipeCategoriesFromAPISuccess","categories","GET_RECIPE_CATEGORIES","getRecipeCategoriesFromAPI","getCategoryRecipesFromAPISuccess","categoryRecipes","GET_CATEGORY_RECIPES","getCategoryRecipesFromAPI","category"],"mappings":"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","sourcesContent":["/* istanbul ignore file */\nimport axios from 'axios';\nimport actionTypes from './actionTypes';\n\nconst recipesUrl = 'http://192.168.0.17:2000/recipes';\n\nexport function getRecipeFromAPISuccess(recipe: object) {\n  return {\n    type: actionTypes.GET_RECIPE,\n    recipe,\n  };\n}\n\nexport function getRecipeFromAPI() {\n  return async (dispatch: (arg0: { type: string; recipe: object; }) => void) => {\n    try {\n      const { data } = await axios.get(recipesUrl);\n      dispatch(getRecipeFromAPISuccess(data));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n\nexport function getRecipeByNameFromAPISuccess(recipe: object) {\n  return {\n    type: actionTypes.GET_RECIPE_BY_NAME,\n    recipe,\n  };\n}\n\nexport function getCategoryRecipeByNameFromAPISuccess(recipe: object) {\n  return {\n    type: actionTypes.GET_CATEGORY_RECIPE_BY_NAME,\n    recipe,\n  };\n}\n\nexport function getRecipeByNameFromAPI(name : string, isCategorySearch : boolean) {\n  return async (dispatch: (arg0: { type: string; recipe: object; }) => void) => {\n    try {\n      const { data } = await axios.get(`${recipesUrl}/${name}`, { name });\n      if (isCategorySearch) {\n        dispatch(getCategoryRecipeByNameFromAPISuccess(data));\n      } else {\n        dispatch(getRecipeByNameFromAPISuccess(data));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n\nexport function restoreSearchReducer() {\n  return {\n    type: actionTypes.RESTORE_SEARCH_REDUCER,\n  };\n}\n\nexport function getRecipeCategoriesFromAPISuccess(categories: object) {\n  return {\n    type: actionTypes.GET_RECIPE_CATEGORIES,\n    categories,\n  };\n}\n\nexport function getRecipeCategoriesFromAPI(name : string) {\n  return async (dispatch: (arg0: { type: string; categories: object; }) => void) => {\n    try {\n      const { data } = await axios.get(`${recipesUrl}/categories`);\n      dispatch(getRecipeCategoriesFromAPISuccess(data));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n\nexport function getCategoryRecipesFromAPISuccess(categoryRecipes: object) {\n  return {\n    type: actionTypes.GET_CATEGORY_RECIPES,\n    categoryRecipes,\n  };\n}\n\nexport function getCategoryRecipesFromAPI(category : string) {\n  return async (dispatch: (arg0: { type: string; categoryRecipes: object; }) => void) => {\n    try {\n      const { data } = await axios.get(`${recipesUrl}/categories/${category}`);\n      dispatch(getCategoryRecipesFromAPISuccess(data));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}