{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/davidmatochoya/Desktop/david-final-project/client/src/components/List/TextInput.tsx\";\nimport React, { useState } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { getProductTypeFromFoodDB } from \"../../redux/actions/groceryListActions\";\n\nfunction AddIngredientBoxInput(_ref) {\n  var searchBoxRef = _ref.searchBoxRef,\n      actions = _ref.actions;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  return React.createElement(TextInput, {\n    style: {\n      height: 40,\n      fontSize: 17,\n      width: '100%'\n    },\n    placeholder: \"Add an item to your list\",\n    onChangeText: function onChangeText(textChange) {\n      return setText(textChange);\n    },\n    defaultValue: text,\n    ref: searchBoxRef,\n    onSubmitEditing: function onSubmitEditing() {\n      if (text) {\n        actions.getProductTypeFromFoodDB(text.toLowerCase());\n        setText('');\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      getProductTypeFromFoodDB: getProductTypeFromFoodDB\n    }, dispatch)\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(AddIngredientBoxInput);","map":{"version":3,"sources":["/Users/davidmatochoya/Desktop/david-final-project/client/src/components/List/TextInput.tsx"],"names":["React","useState","connect","bindActionCreators","getProductTypeFromFoodDB","AddIngredientBoxInput","searchBoxRef","actions","text","setText","height","fontSize","width","textChange","toLowerCase","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAoBC,kBAApB,QAAwD,OAAxD;AACA,SAASC,wBAAT;;AAWA,SAASC,qBAAT,OAAkE;AAAA,MAAjCC,YAAiC,QAAjCA,YAAiC;AAAA,MAAnBC,OAAmB,QAAnBA,OAAmB;;AAAA,kBACxCN,QAAQ,CAAS,EAAT,CADgC;AAAA;AAAA,MACzDO,IADyD;AAAA,MACnDC,OADmD;;AAGhE,SACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,QAAQ,EAAE,EAAxB;AAA4BC,MAAAA,KAAK,EAAE;AAAnC,KADT;AAEE,IAAA,WAAW,EAAC,0BAFd;AAGE,IAAA,YAAY,EAAE,sBAACC,UAAD;AAAA,aAAgBJ,OAAO,CAACI,UAAD,CAAvB;AAAA,KAHhB;AAIE,IAAA,YAAY,EAAEL,IAJhB;AAKE,IAAA,GAAG,EAAEF,YALP;AAME,IAAA,eAAe,EAAE,2BAAM;AACrB,UAAIE,IAAJ,EAAU;AACRD,QAAAA,OAAO,CAACH,wBAAR,CAAiCI,IAAI,CAACM,WAAL,EAAjC;AACAL,QAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,KAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAeD;;AAED,SAASM,kBAAT,CAA4BC,QAA5B,EAA2D;AACzD,SAAO;AACLT,IAAAA,OAAO,EAAEJ,kBAAkB,CAAC;AAAEC,MAAAA,wBAAwB,EAAxBA;AAAF,KAAD,EAA+BY,QAA/B;AADtB,GAAP;AAGD;;AAED,eAAed,OAAO,CAAC,IAAD,EAAOa,kBAAP,CAAP,CAAkCV,qBAAlC,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { TextInput } from 'react-native';\nimport { connect } from 'react-redux';\nimport { AnyAction, bindActionCreators, Dispatch } from 'redux';\nimport { getProductTypeFromFoodDB } from '../../redux/actions/groceryListActions';\n\ninterface Actions {\n    getProductTypeFromFoodDB(text: string): void\n}\n\ninterface Props {\n    searchBoxRef(): void\n    actions: Actions\n}\n\nfunction AddIngredientBoxInput({ searchBoxRef, actions } : Props) {\n  const [text, setText] = useState<string>('');\n\n  return (\n    <TextInput\n      style={{ height: 40, fontSize: 17, width: '100%' }}\n      placeholder=\"Add an item to your list\"\n      onChangeText={(textChange) => setText(textChange)}\n      defaultValue={text}\n      ref={searchBoxRef}\n      onSubmitEditing={() => {\n        if (text) {\n          actions.getProductTypeFromFoodDB(text.toLowerCase());\n          setText('');\n        }\n      }}\n    />\n  );\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<AnyAction>) {\n  return {\n    actions: bindActionCreators({ getProductTypeFromFoodDB }, dispatch),\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(AddIngredientBoxInput);\n"]},"metadata":{},"sourceType":"module"}