{"ast":null,"code":"import { createStore, compose, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport rootReducer from \"./reducers\";\nexport default function configureStore(initialState) {\n  return createStore(rootReducer, initialState, compose(applyMiddleware(thunkMiddleware)));\n}","map":{"version":3,"sources":["/Users/davidmatochoya/Desktop/david-final-project/client/src/redux/configureStore.tsx"],"names":["createStore","compose","applyMiddleware","thunkMiddleware","rootReducer","configureStore","initialState"],"mappings":"AACA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,WAAP;AAEA,eAAe,SAASC,cAAT,CAAwBC,YAAxB,EAA8C;AAC3D,SAAON,WAAW,CAChBI,WADgB,EAEhBE,YAFgB,EAGhBL,OAAO,CAACC,eAAe,CAACC,eAAD,CAAhB,CAHS,CAAlB;AAKD","sourcesContent":["/* istanbul ignore file */\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport rootReducer from './reducers';\n\nexport default function configureStore(initialState: Object) {\n  return createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(thunkMiddleware)),\n  );\n}\n"]},"metadata":{},"sourceType":"module"}