{"ast":null,"code":"var _jsxFileName = \"/Users/davidmatochoya/Desktop/david-final-project/client/components/Home/Home.tsx\";\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { getRecipeFromAPI } from \"../../redux/actions/recipesActions\";\nvar styles = StyleSheet.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    zIndex: 1,\n    width: '100%',\n    height: 50,\n    backgroundColor: 'rgb(230, 84, 84)',\n    paddingHorizontal: 10,\n    justifyContent: 'center'\n  }\n});\n\nfunction Home(_ref) {\n  var _this = this;\n\n  var recipes = _ref.recipes,\n      actions = _ref.actions;\n\n  var _Dimensions$get = Dimensions.get('window'),\n      height = _Dimensions$get.height;\n\n  var recipePhotoUri;\n  var recipeName;\n\n  var getRecipeNameAndPhoto = function getRecipeNameAndPhoto() {\n    recipePhotoUri = recipes[0].strMealThumb;\n    recipeName = recipes[0].strMeal;\n  };\n\n  var recipesJSX = [];\n\n  var addRecipeToScrollView = function addRecipeToScrollView() {\n    recipes.forEach(function (index) {\n      console.log(index);\n      getRecipeNameAndPhoto();\n    });\n    recipesJSX.push(React.createElement(Image, {\n      key: Math.random() * Date.now(),\n      style: {\n        height: height - 40\n      },\n      source: {\n        uri: recipePhotoUri\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  if (recipes.length) {\n    addRecipeToScrollView();\n  }\n\n  useEffect(function () {\n    if (!recipes.length) {\n      actions.getRecipeFromAPI();\n      actions.getRecipeFromAPI();\n      actions.getRecipeFromAPI();\n    }\n  }, []);\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    backgroundColor: \"black\",\n    barStyle: \"light-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontSize: 25\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Recipes\")), React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, recipesJSX));\n}\n\nfunction mapStateToProps(_ref2) {\n  var recipesReducer = _ref2.recipesReducer;\n  debugger;\n  return {\n    recipes: recipesReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      getRecipeFromAPI: getRecipeFromAPI\n    }, dispatch)\n  };\n}\n\nHome.propTypes = {\n  recipes: PropTypes.arrayOf(PropTypes.object).isRequired,\n  actions: PropTypes.shape({\n    getRecipeFromAPI: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/Users/davidmatochoya/Desktop/david-final-project/client/components/Home/Home.tsx"],"names":["React","useEffect","connect","bindActionCreators","PropTypes","ScrollView","getRecipeFromAPI","styles","StyleSheet","create","header","position","top","zIndex","width","height","backgroundColor","paddingHorizontal","justifyContent","Home","recipes","actions","Dimensions","get","recipePhotoUri","recipeName","getRecipeNameAndPhoto","strMealThumb","strMeal","recipesJSX","addRecipeToScrollView","forEach","index","console","log","push","Math","random","Date","now","uri","length","color","fontSize","mapStateToProps","recipesReducer","mapDispatchToProps","dispatch","propTypes","arrayOf","object","isRequired","shape","func"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport {\n  View, Text, StatusBar, StyleSheet, Dimensions, Image,\n} from 'react-native';\nimport { connect } from 'react-redux';\nimport { AnyAction, bindActionCreators, Dispatch } from 'redux';\nimport PropTypes from 'prop-types';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { getRecipeFromAPI } from '../../redux/actions/recipesActions';\n\nconst styles = StyleSheet.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    zIndex: 1,\n    width: '100%',\n    height: 50,\n    backgroundColor: 'rgb(230, 84, 84)',\n    paddingHorizontal: 10,\n    justifyContent: 'center',\n  },\n});\n\nfunction Home({ recipes, actions } : { recipes: Object, actions: Object}) {\n  const { height } = Dimensions.get('window');\n\n  let recipePhotoUri: string;\n  let recipeName;\n  const getRecipeNameAndPhoto = () => {\n    recipePhotoUri = recipes[0].strMealThumb;\n    recipeName = recipes[0].strMeal;\n  };\n\n  const recipesJSX: JSX.Element[] = [];\n  const addRecipeToScrollView = () => {\n    recipes.forEach((index) => {\n      console.log(index);\n      getRecipeNameAndPhoto();\n    });\n    recipesJSX.push(\n      <Image\n        key={Math.random() * Date.now()}\n        style={{ height: height - 40 }}\n        source={{ uri: recipePhotoUri }}\n      />,\n    );\n  };\n\n  if (recipes.length) {\n    addRecipeToScrollView();\n  }\n\n  useEffect(() => {\n    if (!recipes.length) {\n      actions.getRecipeFromAPI();\n      actions.getRecipeFromAPI();\n      actions.getRecipeFromAPI();\n    }\n  }, []);\n  return (\n    <View>\n      <StatusBar backgroundColor=\"black\" barStyle=\"light-content\" />\n      <View style={styles.header}>\n        <Text style={{ color: 'white', fontSize: 25 }}>\n          Recipes\n        </Text>\n      </View>\n      <ScrollView>\n        {recipesJSX}\n      </ScrollView>\n    </View>\n  );\n}\n\nfunction mapStateToProps({ recipesReducer } : { recipesReducer: Object}) {\n  debugger;\n  return {\n    recipes: recipesReducer,\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<AnyAction>) {\n  return {\n    actions: bindActionCreators({ getRecipeFromAPI }, dispatch),\n  };\n}\n\nHome.propTypes = {\n  recipes: PropTypes.arrayOf(PropTypes.object).isRequired,\n  actions: PropTypes.shape({\n    getRecipeFromAPI: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n"]},"metadata":{},"sourceType":"module"}