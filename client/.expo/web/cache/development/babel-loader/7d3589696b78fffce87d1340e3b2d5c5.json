{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/davidmatochoya/Desktop/david-final-project/client/src/components/Login/LoginScreen.tsx\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as Google from 'expo-google-app-auth';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default function LoginScreen() {\n  function signInWithGoogleAsync() {\n    var result;\n    return _regeneratorRuntime.async(function signInWithGoogleAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Google.logInAsync({\n              androidClientId: '80498824828-jhn8fkl2vgpjfncuindvhicm25kfi8k9.apps.googleusercontent.com',\n              scopes: ['profile', 'email']\n            }));\n\n          case 3:\n            result = _context.sent;\n\n            if (!(result.type === 'success')) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\", result.accessToken);\n\n          case 6:\n            return _context.abrupt(\"return\", {\n              cancelled: true\n            });\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", {\n              error: true\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    title: \"Sign in with Google\",\n    onPress: function onPress() {\n      return console.log('hi');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/davidmatochoya/Desktop/david-final-project/client/src/components/Login/LoginScreen.tsx"],"names":["React","Google","styles","StyleSheet","create","container","flex","alignItems","justifyContent","LoginScreen","signInWithGoogleAsync","logInAsync","androidClientId","scopes","result","type","accessToken","cancelled","error","console","log"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAGA,OAAO,KAAKC,MAAZ,MAAwB,sBAAxB;AAGA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP;AADoB,CAAlB,CAAf;AAQA,eAAe,SAASC,WAAT,GAAoC;AACjD,WAAeC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEyBT,MAAM,CAACU,UAAP,CAAkB;AACrCC,cAAAA,eAAe,EAAE,yEADoB;AAErCC,cAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,OAAZ;AAF6B,aAAlB,CAFzB;;AAAA;AAEUC,YAAAA,MAFV;;AAAA,kBAOQA,MAAM,CAACC,IAAP,KAAgB,SAPxB;AAAA;AAAA;AAAA;;AAAA,6CAQaD,MAAM,CAACE,WARpB;;AAAA;AAAA,6CAUW;AAAEC,cAAAA,SAAS,EAAE;AAAb,aAVX;;AAAA;AAAA;AAAA;AAAA,6CAYW;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAZX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhB,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,qBAAd;AAAoC,IAAA,OAAO,EAAE;AAAA,aAAMc,OAAO,CAACC,GAAR,CAAY,IAAZ,CAAN;AAAA,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View, Button } from 'react-native';\nimport { Icon } from 'react-native-elements';\nimport * as Google from 'expo-google-app-auth';\nimport * as RootNavigation from '../../../RootNavigation';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default function LoginScreen(): JSX.Element {\n  async function signInWithGoogleAsync() {\n    try {\n      const result = await Google.logInAsync({\n        androidClientId: '80498824828-jhn8fkl2vgpjfncuindvhicm25kfi8k9.apps.googleusercontent.com',\n        scopes: ['profile', 'email'],\n      });\n\n      if (result.type === 'success') {\n        return result.accessToken;\n      }\n      return { cancelled: true };\n    } catch (e) {\n      return { error: true };\n    }\n  }\n  return (\n    <View style={styles.container}>\n      <Button title=\"Sign in with Google\" onPress={() => console.log('hi')} />\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}