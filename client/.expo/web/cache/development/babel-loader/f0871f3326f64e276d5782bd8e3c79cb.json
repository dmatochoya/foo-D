{"ast":null,"code":"var _jsxFileName = \"/Users/davidmatochoya/Desktop/david-final-project/client/src/components/Category/Category.tsx\";\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { getRecipeByNameFromAPI } from \"../../redux/actions/recipesActions\";\nvar styles = StyleSheet.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    zIndex: 1,\n    width: '100%',\n    height: 50,\n    backgroundColor: 'rgb(230, 84, 84)',\n    paddingHorizontal: 10,\n    justifyContent: 'center'\n  },\n  linearGradientBox: {\n    position: 'absolute',\n    backgroundColor: ' rgba(250, 250, 250, 0.4)',\n    width: '100%',\n    height: 240,\n    alignItems: 'center',\n    padding: 10\n  },\n  recipeName: {\n    color: 'black',\n    fontSize: 30,\n    fontWeight: 'bold',\n    textShadowColor: 'rgba(250, 250, 250, 0.4)',\n    textShadowOffset: {\n      width: 1,\n      height: 1\n    },\n    textShadowRadius: 2,\n    textAlign: 'center'\n  }\n});\nvar categoryRecipeIndex = 0;\n\nfunction Category(_ref) {\n  var _this = this;\n\n  var recipes = _ref.recipes,\n      categoryRecipes = _ref.categoryRecipes,\n      actions = _ref.actions,\n      navigation = _ref.navigation,\n      categoryName = _ref.route.params.categoryName;\n\n  var _Dimensions$get = Dimensions.get('window'),\n      height = _Dimensions$get.height;\n\n  var recipePhotoHeight = +(height - 114).toFixed();\n  var linearGradientBoxHeight = height - 280;\n  var scrollViewContentOffsetY = 0;\n  var goingDown;\n  var recipePhotoUri;\n  var recipeName;\n\n  var getRecipeNameAndPhoto = function getRecipeNameAndPhoto(index) {\n    recipePhotoUri = categoryRecipes[index].strMealThumb;\n    recipeName = categoryRecipes[index].strMeal;\n  };\n\n  var recipesJSX = [];\n\n  var addRecipeToScrollView = function addRecipeToScrollView(index) {\n    getRecipeNameAndPhoto(index);\n    recipesJSX.push(React.createElement(TouchableWithoutFeedback, {\n      key: Math.random() * Date.now(),\n      onPress: function onPress() {\n        navigation.navigate('detail', {\n          recipe: categoryRecipes[index]\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, React.createElement(Image, {\n      style: {\n        height: recipePhotoHeight,\n        position: 'relative',\n        top: 50\n      },\n      source: {\n        uri: recipePhotoUri\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }), React.createElement(LinearGradient, {\n      colors: ['transparent', 'rgb(250, 250, 250)'],\n      style: [styles.linearGradientBox, {\n        top: linearGradientBoxHeight\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.recipeName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, recipeName)))));\n  };\n\n  if (categoryRecipes.length >= 3) {\n    categoryRecipes.forEach(function (element, index) {\n      addRecipeToScrollView(index);\n    });\n  }\n\n  useEffect(function () {\n    if (Object.keys(recipes).length) {\n      for (categoryRecipeIndex = 0; categoryRecipeIndex < 3; categoryRecipeIndex += 1) {\n        actions.getRecipeByNameFromAPI(recipes.meals[categoryRecipeIndex].strMeal, true);\n      }\n    }\n  }, [Object.keys(recipes).length]);\n  return React.createElement(View, {\n    style: {\n      marginTop: StatusBar.currentHeight\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    backgroundColor: \"black\",\n    barStyle: \"light-content\",\n    translucent: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontSize: 25\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, categoryName + \" category\")), React.createElement(ScrollView, {\n    pagingEnabled: true,\n    decelerationRate: 0,\n    snapToInterval: recipePhotoHeight,\n    snapToAlignment: \"center\",\n    showsVerticalScrollIndicator: false,\n    onScroll: function onScroll(event) {\n      if (event.nativeEvent.contentOffset.y > scrollViewContentOffsetY) {\n        goingDown = true;\n      } else {\n        goingDown = false;\n      }\n\n      scrollViewContentOffsetY = event.nativeEvent.contentOffset.y;\n    },\n    onScrollEndDrag: function onScrollEndDrag() {\n      if (goingDown) {\n        if (recipes.meals.length <= categoryRecipeIndex) {\n          categoryRecipeIndex = 0;\n        }\n\n        actions.getRecipeByNameFromAPI(recipes.meals[categoryRecipeIndex].strMeal, true);\n        categoryRecipeIndex += 1;\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, recipesJSX.length ? recipesJSX : React.createElement(ActivityIndicator, {\n    color: \"black\",\n    style: {\n      marginTop: height / 2 - 30\n    },\n    size: 60,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 43\n    }\n  })));\n}\n\nfunction mapStateToProps(_ref2) {\n  var categoryRecipesReducer = _ref2.categoryRecipesReducer,\n      categoryRecipesByNameReducer = _ref2.categoryRecipesByNameReducer;\n  return {\n    recipes: categoryRecipesReducer,\n    categoryRecipes: categoryRecipesByNameReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      getRecipeByNameFromAPI: getRecipeByNameFromAPI\n    }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Category);","map":{"version":3,"sources":["/Users/davidmatochoya/Desktop/david-final-project/client/src/components/Category/Category.tsx"],"names":["React","useEffect","LinearGradient","connect","bindActionCreators","ScrollView","getRecipeByNameFromAPI","styles","StyleSheet","create","header","position","top","zIndex","width","height","backgroundColor","paddingHorizontal","justifyContent","linearGradientBox","alignItems","padding","recipeName","color","fontSize","fontWeight","textShadowColor","textShadowOffset","textShadowRadius","textAlign","categoryRecipeIndex","Category","recipes","categoryRecipes","actions","navigation","categoryName","route","params","Dimensions","get","recipePhotoHeight","toFixed","linearGradientBoxHeight","scrollViewContentOffsetY","goingDown","recipePhotoUri","getRecipeNameAndPhoto","index","strMealThumb","strMeal","recipesJSX","addRecipeToScrollView","push","Math","random","Date","now","navigate","recipe","uri","length","forEach","element","Object","keys","meals","marginTop","StatusBar","currentHeight","event","nativeEvent","contentOffset","y","mapStateToProps","categoryRecipesReducer","categoryRecipesByNameReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport {\n  View, Text, StatusBar, StyleSheet, Dimensions, Image, TouchableWithoutFeedback, ActivityIndicator,\n} from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { connect } from 'react-redux';\nimport { AnyAction, bindActionCreators, Dispatch } from 'redux';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { getRecipeByNameFromAPI } from '../../redux/actions/recipesActions';\n\nconst styles = StyleSheet.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    zIndex: 1,\n    width: '100%',\n    height: 50,\n    backgroundColor: 'rgb(230, 84, 84)',\n    paddingHorizontal: 10,\n    justifyContent: 'center',\n  },\n  linearGradientBox: {\n    position: 'absolute',\n    backgroundColor: ' rgba(250, 250, 250, 0.4)',\n    width: '100%',\n    height: 240,\n    alignItems: 'center',\n    padding: 10,\n  },\n  recipeName: {\n    color: 'black',\n    fontSize: 30,\n    fontWeight: 'bold',\n    textShadowColor: 'rgba(250, 250, 250, 0.4)',\n    textShadowOffset: { width: 1, height: 1 },\n    textShadowRadius: 2,\n    textAlign: 'center',\n  },\n});\n\ninterface Recipe {\n    strMeal: string\n}\n\ninterface RecipeList {\n    meals: Recipe[]\n}\n\ninterface CategoryRecipe {\n    strMealThumb: string\n    strMeal: string\n}\n\ninterface Navigation {\n    navigate(route: string, data: object): void\n}\n\ninterface Actions {\n    getRecipeByNameFromAPI(text : string, boolean: boolean): void\n  }\n\ninterface Props {\n    recipes: RecipeList\n    categoryRecipes: CategoryRecipe[]\n    actions: Actions\n    navigation: Navigation\n    route: { params: { categoryName: string } }\n}\n\nlet categoryRecipeIndex: number = 0;\n\nfunction Category({\n  recipes, categoryRecipes, actions, navigation, route: { params: { categoryName } },\n} : Props) {\n  const { height } = Dimensions.get('window');\n  const recipePhotoHeight = +(height - 114).toFixed();\n  const linearGradientBoxHeight = height - 280;\n\n  let scrollViewContentOffsetY = 0;\n  let goingDown: boolean;\n\n  let recipePhotoUri: string;\n  let recipeName: string;\n  const getRecipeNameAndPhoto = (index: number) => {\n    recipePhotoUri = categoryRecipes[index].strMealThumb;\n    recipeName = categoryRecipes[index].strMeal;\n  };\n\n  const recipesJSX: JSX.Element[] = [];\n  const addRecipeToScrollView = (index: number) => {\n    getRecipeNameAndPhoto(index);\n    recipesJSX.push(\n      <TouchableWithoutFeedback\n        key={Math.random() * Date.now()}\n        onPress={() => {\n          navigation.navigate('detail', {\n            recipe: categoryRecipes[index],\n          });\n        }}\n      >\n        <View>\n          <Image\n            style={{ height: recipePhotoHeight, position: 'relative', top: 50 }}\n            source={{ uri: recipePhotoUri }}\n          />\n          <LinearGradient\n            colors={['transparent', 'rgb(250, 250, 250)']}\n            style={[styles.linearGradientBox, { top: linearGradientBoxHeight }]}\n          >\n            <Text style={styles.recipeName}>\n              {recipeName}\n            </Text>\n          </LinearGradient>\n        </View>\n      </TouchableWithoutFeedback>,\n    );\n  };\n\n  if (categoryRecipes.length >= 3) {\n    categoryRecipes.forEach((element: object, index: number) => {\n      addRecipeToScrollView(index);\n    });\n  }\n  useEffect(() => {\n    if (Object.keys(recipes).length) {\n      for (categoryRecipeIndex = 0; categoryRecipeIndex < 3; categoryRecipeIndex += 1) {\n        actions.getRecipeByNameFromAPI(recipes.meals[categoryRecipeIndex].strMeal, true);\n      }\n    }\n  }, [Object.keys(recipes).length]);\n\n  return (\n    <View style={{ marginTop: StatusBar.currentHeight }}>\n      <StatusBar backgroundColor=\"black\" barStyle=\"light-content\" translucent />\n      <View style={styles.header}>\n        <Text style={{ color: 'white', fontSize: 25 }}>\n          {`${categoryName} category`}\n        </Text>\n      </View>\n      <ScrollView\n        pagingEnabled\n        decelerationRate={0}\n        snapToInterval={recipePhotoHeight}\n        snapToAlignment=\"center\"\n        showsVerticalScrollIndicator={false}\n        onScroll={(event) => {\n          if (event.nativeEvent.contentOffset.y > scrollViewContentOffsetY) {\n            goingDown = true;\n          } else {\n            goingDown = false;\n          }\n          scrollViewContentOffsetY = event.nativeEvent.contentOffset.y;\n        }}\n        onScrollEndDrag={() => {\n          if (goingDown) {\n            if (recipes.meals.length <= categoryRecipeIndex) {\n              categoryRecipeIndex = 0;\n            }\n            actions.getRecipeByNameFromAPI(recipes.meals[categoryRecipeIndex].strMeal, true);\n            categoryRecipeIndex += 1;\n          }\n        }}\n      >\n        {recipesJSX.length ? recipesJSX : <ActivityIndicator color=\"black\" style={{ marginTop: height / 2 - 30 }} size={60} />}\n      </ScrollView>\n    </View>\n  );\n}\n\nfunction mapStateToProps({ categoryRecipesReducer, categoryRecipesByNameReducer }\n    : { categoryRecipesReducer: object, categoryRecipesByNameReducer : object}) {\n  return {\n    recipes: categoryRecipesReducer,\n    categoryRecipes: categoryRecipesByNameReducer,\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<AnyAction>) {\n  return {\n    actions: bindActionCreators({ getRecipeByNameFromAPI }, dispatch),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Category);\n"]},"metadata":{},"sourceType":"module"}