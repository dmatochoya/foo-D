{"ast":null,"code":"var _jsxFileName = \"/Users/davidmatochoya/Desktop/david-final-project/client/src/components/Home/Home.tsx\";\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { getRecipeFromAPI } from \"../../redux/actions/recipesActions\";\nvar styles = StyleSheet.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    zIndex: 1,\n    width: '100%',\n    height: 50,\n    backgroundColor: 'rgb(230, 84, 84)',\n    paddingHorizontal: 10,\n    justifyContent: 'center'\n  },\n  linearGradientBox: {\n    position: 'absolute',\n    backgroundColor: ' rgba(250, 250, 250, 0.4)',\n    width: '100%',\n    height: 240,\n    alignItems: 'center',\n    padding: 10\n  },\n  recipeName: {\n    color: 'black',\n    fontSize: 30,\n    fontWeight: 'bold',\n    textShadowColor: 'rgba(250, 250, 250, 0.4)',\n    textShadowOffset: {\n      width: 1,\n      height: 1\n    },\n    textShadowRadius: 2,\n    textAlign: 'center'\n  }\n});\n\nfunction Home(_ref) {\n  var _this = this;\n\n  var recipes = _ref.recipes,\n      actions = _ref.actions,\n      navigation = _ref.navigation;\n\n  var _Dimensions$get = Dimensions.get('window'),\n      height = _Dimensions$get.height;\n\n  var recipePhotoHeight = +(height - 114).toFixed();\n  var linearGradientBoxHeight = height - 280;\n  var scrollViewContentOffsetY = 0;\n  var goingDown;\n  var recipePhotoUri;\n  var recipeName;\n\n  var getRecipeNameAndPhoto = function getRecipeNameAndPhoto(index) {\n    recipePhotoUri = recipes[index].strMealThumb;\n    recipeName = recipes[index].strMeal;\n  };\n\n  var recipesJSX = [];\n\n  var addRecipeToScrollView = function addRecipeToScrollView(index) {\n    getRecipeNameAndPhoto(index);\n    recipesJSX.push(React.createElement(TouchableWithoutFeedback, {\n      key: Math.random() * Date.now(),\n      onPress: function onPress() {\n        return navigation.navigate('detail', {\n          recipe: recipes[index]\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      testID: \"recipeTest\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, React.createElement(Image, {\n      style: {\n        height: recipePhotoHeight,\n        position: 'relative',\n        top: 50\n      },\n      source: {\n        uri: recipePhotoUri\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }), React.createElement(LinearGradient, {\n      colors: ['transparent', 'rgb(250, 250, 250)'],\n      style: [styles.linearGradientBox, {\n        top: linearGradientBoxHeight\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.recipeName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, recipeName)))));\n  };\n\n  if (recipes != null && recipes.length) {\n    recipes == null ? void 0 : recipes.forEach(function (element, index) {\n      addRecipeToScrollView(index);\n    });\n  }\n\n  useEffect(function () {\n    if (!recipes.length) {\n      for (var i = 0; i < 3; i += 1) {\n        actions.getRecipeFromAPI();\n      }\n    }\n  }, []);\n  return React.createElement(View, {\n    style: {\n      marginTop: StatusBar.currentHeight\n    },\n    testID: \"test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    backgroundColor: \"black\",\n    barStyle: \"light-content\",\n    translucent: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontSize: 25\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, \"Recipes\")), React.createElement(ScrollView, {\n    pagingEnabled: true,\n    decelerationRate: 0,\n    snapToInterval: recipePhotoHeight,\n    snapToAlignment: \"center\",\n    showsVerticalScrollIndicator: false,\n    onScroll: function onScroll(event) {\n      if (event.nativeEvent.contentOffset.y > scrollViewContentOffsetY) {\n        goingDown = true;\n      } else {\n        goingDown = false;\n      }\n\n      scrollViewContentOffsetY = event.nativeEvent.contentOffset.y;\n    },\n    onScrollEndDrag: function onScrollEndDrag() {\n      if (goingDown) {\n        actions.getRecipeFromAPI();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, recipesJSX));\n}\n\nfunction mapStateToProps(_ref2) {\n  var recipesReducer = _ref2.recipesReducer;\n  return {\n    recipes: recipesReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      getRecipeFromAPI: getRecipeFromAPI\n    }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/Users/davidmatochoya/Desktop/david-final-project/client/src/components/Home/Home.tsx"],"names":["React","useEffect","LinearGradient","connect","bindActionCreators","ScrollView","getRecipeFromAPI","styles","StyleSheet","create","header","position","top","zIndex","width","height","backgroundColor","paddingHorizontal","justifyContent","linearGradientBox","alignItems","padding","recipeName","color","fontSize","fontWeight","textShadowColor","textShadowOffset","textShadowRadius","textAlign","Home","recipes","actions","navigation","Dimensions","get","recipePhotoHeight","toFixed","linearGradientBoxHeight","scrollViewContentOffsetY","goingDown","recipePhotoUri","getRecipeNameAndPhoto","index","strMealThumb","strMeal","recipesJSX","addRecipeToScrollView","push","Math","random","Date","now","navigate","recipe","uri","length","forEach","element","i","marginTop","StatusBar","currentHeight","event","nativeEvent","contentOffset","y","mapStateToProps","recipesReducer","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;AAIA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAoBC,kBAApB,QAAwD,OAAxD;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,SAASC,gBAAT;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,UADJ;AAENC,IAAAA,GAAG,EAAE,CAFC;AAGNC,IAAAA,MAAM,EAAE,CAHF;AAINC,IAAAA,KAAK,EAAE,MAJD;AAKNC,IAAAA,MAAM,EAAE,EALF;AAMNC,IAAAA,eAAe,EAAE,kBANX;AAONC,IAAAA,iBAAiB,EAAE,EAPb;AAQNC,IAAAA,cAAc,EAAE;AARV,GADuB;AAW/BC,EAAAA,iBAAiB,EAAE;AACjBR,IAAAA,QAAQ,EAAE,UADO;AAEjBK,IAAAA,eAAe,EAAE,2BAFA;AAGjBF,IAAAA,KAAK,EAAE,MAHU;AAIjBC,IAAAA,MAAM,EAAE,GAJS;AAKjBK,IAAAA,UAAU,EAAE,QALK;AAMjBC,IAAAA,OAAO,EAAE;AANQ,GAXY;AAmB/BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE,OADG;AAEVC,IAAAA,QAAQ,EAAE,EAFA;AAGVC,IAAAA,UAAU,EAAE,MAHF;AAIVC,IAAAA,eAAe,EAAE,0BAJP;AAKVC,IAAAA,gBAAgB,EAAE;AAAEb,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,MAAM,EAAE;AAApB,KALR;AAMVa,IAAAA,gBAAgB,EAAE,CANR;AAOVC,IAAAA,SAAS,EAAE;AAPD;AAnBmB,CAAlB,CAAf;;AA6CA,SAASC,IAAT,OAAuD;AAAA;;AAAA,MAAvCC,OAAuC,QAAvCA,OAAuC;AAAA,MAA9BC,OAA8B,QAA9BA,OAA8B;AAAA,MAArBC,UAAqB,QAArBA,UAAqB;;AAAA,wBAClCC,UAAU,CAACC,GAAX,CAAe,QAAf,CADkC;AAAA,MAC7CpB,MAD6C,mBAC7CA,MAD6C;;AAErD,MAAMqB,iBAAiB,GAAG,CAAC,CAACrB,MAAM,GAAG,GAAV,EAAesB,OAAf,EAA3B;AACA,MAAMC,uBAAuB,GAAGvB,MAAM,GAAG,GAAzC;AAEA,MAAIwB,wBAAwB,GAAG,CAA/B;AACA,MAAIC,SAAJ;AAEA,MAAIC,cAAJ;AACA,MAAInB,UAAJ;;AACA,MAAMoB,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,KAAD,EAAmB;AAC/CF,IAAAA,cAAc,GAAGV,OAAO,CAACY,KAAD,CAAP,CAAeC,YAAhC;AACAtB,IAAAA,UAAU,GAAGS,OAAO,CAACY,KAAD,CAAP,CAAeE,OAA5B;AACD,GAHD;;AAKA,MAAMC,UAAyB,GAAG,EAAlC;;AACA,MAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACJ,KAAD,EAAmB;AAC/CD,IAAAA,qBAAqB,CAACC,KAAD,CAArB;AACAG,IAAAA,UAAU,CAACE,IAAX,CACE,oBAAC,wBAAD;AACE,MAAA,GAAG,EAAEC,IAAI,CAACC,MAAL,KAAgBC,IAAI,CAACC,GAAL,EADvB;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMnB,UAAU,CAACoB,QAAX,CAAoB,QAApB,EAA8B;AAC3CC,UAAAA,MAAM,EAAEvB,OAAO,CAACY,KAAD;AAD4B,SAA9B,CAAN;AAAA,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,IAAD;AAAM,MAAA,MAAM,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE;AAAE5B,QAAAA,MAAM,EAAEqB,iBAAV;AAA6BzB,QAAAA,QAAQ,EAAE,UAAvC;AAAmDC,QAAAA,GAAG,EAAE;AAAxD,OADT;AAEE,MAAA,MAAM,EAAE;AAAE2C,QAAAA,GAAG,EAAEd;AAAP,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE,oBAAC,cAAD;AACE,MAAA,MAAM,EAAE,CAAC,aAAD,EAAgB,oBAAhB,CADV;AAEE,MAAA,KAAK,EAAE,CAAClC,MAAM,CAACY,iBAAR,EAA2B;AAAEP,QAAAA,GAAG,EAAE0B;AAAP,OAA3B,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE/B,MAAM,CAACe,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,UADH,CAJF,CALF,CANF,CADF;AAuBD,GAzBD;;AA2BA,MAAIS,OAAJ,YAAIA,OAAO,CAAEyB,MAAb,EAAqB;AACnBzB,IAAAA,OAAO,QAAP,YAAAA,OAAO,CAAE0B,OAAT,CAAiB,UAACC,OAAD,EAAkBf,KAAlB,EAAoC;AACnDI,MAAAA,qBAAqB,CAACJ,KAAD,CAArB;AACD,KAFD;AAGD;;AAED1C,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAAC8B,OAAO,CAACyB,MAAb,EAAqB;AACnB,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,IAAI,CAA5B,EAA+B;AAC7B3B,QAAAA,OAAO,CAAC1B,gBAAR;AACD;AACF;AACF,GANQ,EAMN,EANM,CAAT;AAQA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEsD,MAAAA,SAAS,EAAEC,SAAS,CAACC;AAAvB,KAAb;AAAqD,IAAA,MAAM,EAAC,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,eAAe,EAAC,OAA3B;AAAmC,IAAA,QAAQ,EAAC,eAA5C;AAA4D,IAAA,WAAW,MAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvD,MAAM,CAACG,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEa,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,QAAQ,EAAE;AAA5B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAFF,EAOE,oBAAC,UAAD;AACE,IAAA,aAAa,MADf;AAEE,IAAA,gBAAgB,EAAE,CAFpB;AAGE,IAAA,cAAc,EAAEY,iBAHlB;AAIE,IAAA,eAAe,EAAC,QAJlB;AAKE,IAAA,4BAA4B,EAAE,KALhC;AAME,IAAA,QAAQ,EAAE,kBAAC2B,KAAD,EAAW;AACnB,UAAIA,KAAK,CAACC,WAAN,CAAkBC,aAAlB,CAAgCC,CAAhC,GAAoC3B,wBAAxC,EAAkE;AAChEC,QAAAA,SAAS,GAAG,IAAZ;AACD,OAFD,MAEO;AACLA,QAAAA,SAAS,GAAG,KAAZ;AACD;;AACDD,MAAAA,wBAAwB,GAAGwB,KAAK,CAACC,WAAN,CAAkBC,aAAlB,CAAgCC,CAA3D;AACD,KAbH;AAcE,IAAA,eAAe,EAAE,2BAAM;AACrB,UAAI1B,SAAJ,EAAe;AACbR,QAAAA,OAAO,CAAC1B,gBAAR;AACD;AACF,KAlBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAoBGwC,UApBH,CAPF,CADF;AAgCD;;AAED,SAASqB,eAAT,QAAyE;AAAA,MAA9CC,cAA8C,SAA9CA,cAA8C;AACvE,SAAO;AACLrC,IAAAA,OAAO,EAAEqC;AADJ,GAAP;AAGD;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAA2D;AACzD,SAAO;AACLtC,IAAAA,OAAO,EAAE5B,kBAAkB,CAAC;AAAEE,MAAAA,gBAAgB,EAAhBA;AAAF,KAAD,EAAuBgE,QAAvB;AADtB,GAAP;AAGD;;AAED,eAAenE,OAAO,CAACgE,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CvC,IAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport {\n  View, Text, StatusBar, StyleSheet, Dimensions, Image, TouchableWithoutFeedback,\n} from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { connect } from 'react-redux';\nimport { AnyAction, bindActionCreators, Dispatch } from 'redux';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { getRecipeFromAPI } from '../../redux/actions/recipesActions';\n\nconst styles = StyleSheet.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    zIndex: 1,\n    width: '100%',\n    height: 50,\n    backgroundColor: 'rgb(230, 84, 84)',\n    paddingHorizontal: 10,\n    justifyContent: 'center',\n  },\n  linearGradientBox: {\n    position: 'absolute',\n    backgroundColor: ' rgba(250, 250, 250, 0.4)',\n    width: '100%',\n    height: 240,\n    alignItems: 'center',\n    padding: 10,\n  },\n  recipeName: {\n    color: 'black',\n    fontSize: 30,\n    fontWeight: 'bold',\n    textShadowColor: 'rgba(250, 250, 250, 0.4)',\n    textShadowOffset: { width: 1, height: 1 },\n    textShadowRadius: 2,\n    textAlign: 'center',\n  },\n});\n\ninterface Recipe {\n    strMealThumb: string\n    strMeal: string\n}\n\ninterface Navigation {\n    navigate(route: string, data: object): void\n}\n\ninterface Props {\n    recipes: Array<Recipe>\n    actions: object\n    navigation: Navigation\n}\n\nfunction Home({ recipes, actions, navigation }: Props) {\n  const { height } = Dimensions.get('window');\n  const recipePhotoHeight = +(height - 114).toFixed();\n  const linearGradientBoxHeight = height - 280;\n\n  let scrollViewContentOffsetY = 0;\n  let goingDown: boolean;\n\n  let recipePhotoUri: string;\n  let recipeName : string;\n  const getRecipeNameAndPhoto = (index: number) => {\n    recipePhotoUri = recipes[index].strMealThumb;\n    recipeName = recipes[index].strMeal;\n  };\n\n  const recipesJSX: JSX.Element[] = [];\n  const addRecipeToScrollView = (index: number) => {\n    getRecipeNameAndPhoto(index);\n    recipesJSX.push(\n      <TouchableWithoutFeedback\n        key={Math.random() * Date.now()}\n        onPress={() => navigation.navigate('detail', {\n          recipe: recipes[index],\n        })}\n      >\n        <View testID=\"recipeTest\">\n          <Image\n            style={{ height: recipePhotoHeight, position: 'relative', top: 50 }}\n            source={{ uri: recipePhotoUri }}\n          />\n          <LinearGradient\n            colors={['transparent', 'rgb(250, 250, 250)']}\n            style={[styles.linearGradientBox, { top: linearGradientBoxHeight }]}\n          >\n            <Text style={styles.recipeName}>\n              {recipeName}\n            </Text>\n          </LinearGradient>\n        </View>\n      </TouchableWithoutFeedback>,\n    );\n  };\n\n  if (recipes?.length) {\n    recipes?.forEach((element: object, index: number) => {\n      addRecipeToScrollView(index);\n    });\n  }\n\n  useEffect(() => {\n    if (!recipes.length) {\n      for (let i = 0; i < 3; i += 1) {\n        actions.getRecipeFromAPI();\n      }\n    }\n  }, []);\n\n  return (\n    <View style={{ marginTop: StatusBar.currentHeight }} testID=\"test\">\n      <StatusBar backgroundColor=\"black\" barStyle=\"light-content\" translucent />\n      <View style={styles.header}>\n        <Text style={{ color: 'white', fontSize: 25 }}>\n          Recipes\n        </Text>\n      </View>\n      <ScrollView\n        pagingEnabled\n        decelerationRate={0}\n        snapToInterval={recipePhotoHeight}\n        snapToAlignment=\"center\"\n        showsVerticalScrollIndicator={false}\n        onScroll={(event) => {\n          if (event.nativeEvent.contentOffset.y > scrollViewContentOffsetY) {\n            goingDown = true;\n          } else {\n            goingDown = false;\n          }\n          scrollViewContentOffsetY = event.nativeEvent.contentOffset.y;\n        }}\n        onScrollEndDrag={() => {\n          if (goingDown) {\n            actions.getRecipeFromAPI();\n          }\n        }}\n      >\n        {recipesJSX}\n      </ScrollView>\n    </View>\n  );\n}\n\nfunction mapStateToProps({ recipesReducer } : { recipesReducer: object}) {\n  return {\n    recipes: recipesReducer,\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<AnyAction>) {\n  return {\n    actions: bindActionCreators({ getRecipeFromAPI }, dispatch),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n"]},"metadata":{},"sourceType":"module"}