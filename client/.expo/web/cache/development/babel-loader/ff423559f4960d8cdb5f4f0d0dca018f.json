{"ast":null,"code":"var _jsxFileName = \"/Users/davidmatochoya/Desktop/david-final-project/client/App.tsx\";\nimport 'react-native-gesture-handler';\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport firebase from 'firebase';\nimport admin from 'firebase-admin';\nimport { navigationRef } from \"./RootNavigation\";\nimport LodingScreen from \"./src/components/Login/LodingScreen\";\nimport LoginScreen from \"./src/components/Login/LoginScreen\";\nimport Home from \"./src/components/Home/Home\";\nimport Detail from \"./src/components/Detail/Detail\";\nimport Search from \"./src/components/Search/Search\";\nimport Category from \"./src/components/Category/Category\";\nimport List from \"./src/components/List/List\";\nimport configureStore from \"./src/redux/configureStore\";\nimport { getRecipeCategoriesFromAPI } from \"./src/redux/actions/recipesActions\";\nimport firebaseConfig from \"./config\";\nfirebase.initializeApp(firebaseConfig);\nadmin.initializeApp({\n  databaseURL: 'your_database_url'\n});\nvar Stack = createStackNavigator();\nvar store = configureStore({});\nstore.dispatch(getRecipeCategoriesFromAPI());\nexport default function App() {\n  return React.createElement(React.Fragment, null, React.createElement(ReduxProvider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(NavigationContainer, {\n    ref: navigationRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"lodingScreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"lodingScreen\",\n    component: LodingScreen,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"loginScreen\",\n    component: LoginScreen,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"home\",\n    component: Home,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"detail\",\n    component: Detail,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"search\",\n    component: Search,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"category\",\n    component: Category,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"list\",\n    component: List,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/davidmatochoya/Desktop/david-final-project/client/App.tsx"],"names":["React","NavigationContainer","createStackNavigator","Provider","ReduxProvider","firebase","admin","navigationRef","LodingScreen","LoginScreen","Home","Detail","Search","Category","List","configureStore","getRecipeCategoriesFromAPI","firebaseConfig","initializeApp","databaseURL","Stack","store","dispatch","App","headerShown"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport firebase from 'firebase';\nimport admin from 'firebase-admin';\nimport { navigationRef } from './RootNavigation';\nimport LodingScreen from './src/components/Login/LodingScreen';\nimport LoginScreen from './src/components/Login/LoginScreen';\nimport Home from './src/components/Home/Home';\nimport Detail from './src/components/Detail/Detail';\nimport Search from './src/components/Search/Search';\nimport Category from './src/components/Category/Category';\nimport List from './src/components/List/List';\nimport Navbar from './src/components/Navbar/Navbar';\nimport configureStore from './src/redux/configureStore';\nimport { getRecipeCategoriesFromAPI } from './src/redux/actions/recipesActions';\nimport firebaseConfig from './config';\n\nfirebase.initializeApp(firebaseConfig);\nadmin.initializeApp({\n  databaseURL: 'your_database_url',\n});\n\nconst Stack = createStackNavigator();\n\nconst store = configureStore({});\n\nstore.dispatch(getRecipeCategoriesFromAPI());\n\nexport default function App() {\n  return (\n    <>\n      <ReduxProvider store={store}>\n        <NavigationContainer ref={navigationRef}>\n          <Stack.Navigator initialRouteName=\"lodingScreen\">\n            <Stack.Screen name=\"lodingScreen\" component={LodingScreen} options={{ headerShown: false }} />\n            <Stack.Screen name=\"loginScreen\" component={LoginScreen} options={{ headerShown: false }} />\n            <Stack.Screen name=\"home\" component={Home} options={{ headerShown: false }} />\n            <Stack.Screen name=\"detail\" component={Detail} options={{ headerShown: false }} />\n            <Stack.Screen name=\"search\" component={Search} options={{ headerShown: false }} />\n            <Stack.Screen name=\"category\" component={Category} options={{ headerShown: false }} />\n            <Stack.Screen name=\"list\" component={List} options={{ headerShown: false }} />\n          </Stack.Navigator>\n        </NavigationContainer>\n        {/* <Navbar /> */}\n      </ReduxProvider>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}