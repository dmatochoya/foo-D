{"ast":null,"code":"var _jsxFileName = \"/Users/davidmatochoya/Desktop/david-final-project/client/components/Detail/Detail.tsx\";\nimport React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport PropTypes from 'prop-types';\nvar styles = StyleSheet.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    zIndex: 1,\n    marginTop: StatusBar.currentHeight,\n    width: '100%',\n    justifyContent: 'center',\n    backgroundColor: 'rgb(230, 84, 84)',\n    paddingHorizontal: 10\n  },\n  linearGradientBox: {\n    position: 'absolute',\n    backgroundColor: 'linear-gradient(45deg, rgba(250, 250, 250, 0.4), rgba(250, 250, 250, 0))',\n    width: '100%',\n    height: 240,\n    alignItems: 'center',\n    padding: 10\n  },\n  recipeName: {\n    color: 'black',\n    fontSize: 30,\n    fontWeight: 'bold',\n    textShadowColor: 'rgba(250, 250, 250, 0.5)',\n    textShadowOffset: {\n      width: -1,\n      height: 1\n    },\n    textShadowRadius: 10,\n    textAlign: 'center'\n  },\n  sectionTitle: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginVertical: 20,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    paddingBottom: 15\n  },\n  ingredientContainer: {\n    height: 100,\n    width: 100,\n    backgroundColor: 'rgb(23, 153, 158)',\n    borderRadius: 50,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  stepContainer: {\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 10,\n      height: 10\n    },\n    shadowOpacity: 1,\n    shadowRadius: 10\n  },\n  stepCard: {\n    alignSelf: 'center',\n    height: 180,\n    borderRadius: 5,\n    borderColor: 'black',\n    borderWidth: 1,\n    backgroundColor: '#FFF',\n    elevation: 10,\n    justifyContent: 'center',\n    paddingHorizontal: 10\n  }\n});\nexport default function Detail(_ref) {\n  var _this = this;\n\n  var recipe = _ref.route.params.recipe,\n      goBack = _ref.navigation.goBack;\n\n  var _Dimensions$get = Dimensions.get('window'),\n      height = _Dimensions$get.height,\n      width = _Dimensions$get.width;\n\n  var recipeStepWidth = +(width - width * 10 / 100).toFixed();\n  var linearGradientBoxHeight = height - 280;\n  var recipePhotoUri;\n  var recipeName;\n\n  var getRecipeNameAndPhoto = function getRecipeNameAndPhoto() {\n    recipePhotoUri = recipe.strMealThumb;\n    recipeName = recipe.strMeal;\n  };\n\n  var ingredientsJSX = [];\n\n  var addIngredientsAndMeasure = function addIngredientsAndMeasure() {\n    for (var i = 1; i < 21; i += 1) {\n      var ingredientName = recipe[\"strIngredient\" + i];\n      var ingredientMeasure = recipe[\"strMeasure\" + i];\n\n      if (ingredientName) {\n        ingredientsJSX.push(React.createElement(View, {\n          key: i,\n          style: {\n            alignItems: 'center',\n            width: '33%',\n            marginBottom: 15\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: styles.ingredientContainer,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          style: {\n            height: 75,\n            width: 75\n          },\n          source: {\n            uri: \"https://www.themealdb.com/images/ingredients/\" + ingredientName + \".png\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }\n        })), React.createElement(Text, {\n          style: {\n            width: '90%',\n            textAlign: 'center'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }\n        }, !ingredientName.includes(' ') && ingredientName.includes('-') ? ingredientName.replace('-', '- ') : ingredientName, \"\\n \" + ingredientMeasure)));\n      }\n    }\n  };\n\n  var stepsJSX = [];\n  var arrayOfSteps = [];\n\n  var divideLengthyStepStrings = function divideLengthyStepStrings() {\n    recipe.strInstructions.match(/[^\\r\\n]+/g).map(function (string) {\n      var indexOfPoint = string.indexOf('. ', 150);\n\n      if (string.length > 150 && indexOfPoint !== -1) {\n        arrayOfSteps.push(string.substring(0, indexOfPoint + 1), string.substring(indexOfPoint + 2));\n        return;\n      }\n\n      arrayOfSteps.push(string);\n    });\n  };\n\n  var addRecipeSteps = function addRecipeSteps() {\n    divideLengthyStepStrings();\n    arrayOfSteps.forEach(function (step, index) {\n      var marginLeft = 10;\n      var marginRight = 0;\n\n      if (step === arrayOfSteps[0]) {\n        marginLeft = 20;\n      } else if (step === arrayOfSteps[arrayOfSteps.length - 1]) {\n        marginRight = 20;\n      }\n\n      stepsJSX.push(React.createElement(View, {\n        key: Math.random() * Date.now(),\n        style: [styles.stepContainer, {\n          width: recipeStepWidth,\n          marginLeft: marginLeft,\n          marginRight: marginRight\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: [styles.stepCard, {\n          width: recipeStepWidth\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: 'center',\n          fontSize: 17\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }\n      }, step))));\n    });\n  };\n\n  getRecipeNameAndPhoto();\n  addIngredientsAndMeasure();\n  addRecipeSteps();\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    backgroundColor: \"black\",\n    barStyle: \"light-content\",\n    translucent: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, React.createElement(Ionicons, {\n    size: 42,\n    style: {\n      color: 'white'\n    },\n    name: \"ios-arrow-round-back\",\n    type: \"ionicons\",\n    onPress: function onPress() {\n      return goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  })), React.createElement(ScrollView, {\n    style: {\n      marginBottom: 40\n    },\n    showsVerticalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: {\n      height: height - 40\n    },\n    source: {\n      uri: recipePhotoUri\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }), React.createElement(LinearGradient, {\n    colors: ['transparent', 'rgb(250, 250, 250)'],\n    style: [styles.linearGradientBox, {\n      top: linearGradientBoxHeight\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.recipeName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, recipeName))), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.sectionTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, \"Ingredients\"), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      flexWrap: 'wrap'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, ingredientsJSX)), React.createElement(View, {\n    style: {\n      paddingBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.sectionTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, \"Steps\"), React.createElement(ScrollView, {\n    horizontal: true,\n    pagingEnabled: true,\n    decelerationRate: 0,\n    snapToInterval: recipeStepWidth + 10.1,\n    snapToAlignment: \"center\",\n    showsHorizontalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }, stepsJSX))));\n}\nDetail.propTypes = {\n  route: PropTypes.shape({\n    params: PropTypes.shape({\n      recipe: PropTypes.shape({\n        strMealThumb: PropTypes.string,\n        strMeal: PropTypes.string,\n        strInstructions: PropTypes.string\n      })\n    })\n  }).isRequired,\n  navigation: PropTypes.shape({\n    goBack: PropTypes.func.isRequired\n  }).isRequired\n};","map":{"version":3,"sources":["/Users/davidmatochoya/Desktop/david-final-project/client/components/Detail/Detail.tsx"],"names":["React","Ionicons","LinearGradient","PropTypes","styles","StyleSheet","create","header","position","top","zIndex","marginTop","StatusBar","currentHeight","width","justifyContent","backgroundColor","paddingHorizontal","linearGradientBox","height","alignItems","padding","recipeName","color","fontSize","fontWeight","textShadowColor","textShadowOffset","textShadowRadius","textAlign","sectionTitle","marginVertical","borderBottomWidth","hairlineWidth","paddingBottom","ingredientContainer","borderRadius","stepContainer","shadowColor","shadowOffset","shadowOpacity","shadowRadius","stepCard","alignSelf","borderColor","borderWidth","elevation","Detail","recipe","route","params","goBack","navigation","Dimensions","get","recipeStepWidth","toFixed","linearGradientBoxHeight","recipePhotoUri","getRecipeNameAndPhoto","strMealThumb","strMeal","ingredientsJSX","addIngredientsAndMeasure","i","ingredientName","ingredientMeasure","push","marginBottom","uri","includes","replace","stepsJSX","arrayOfSteps","divideLengthyStepStrings","strInstructions","match","map","string","indexOfPoint","indexOf","length","substring","addRecipeSteps","forEach","step","index","marginLeft","marginRight","Math","random","Date","now","flexDirection","flexWrap","propTypes","shape","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Dimensions, Text, ScrollView, View, StatusBar, Image, StyleSheet,\n} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport PropTypes from 'prop-types';\n\nconst styles = StyleSheet.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    zIndex: 1,\n    marginTop: StatusBar.currentHeight,\n    width: '100%',\n    justifyContent: 'center',\n    backgroundColor: 'rgb(230, 84, 84)',\n    paddingHorizontal: 10,\n  },\n  linearGradientBox: {\n    position: 'absolute',\n    backgroundColor: 'linear-gradient(45deg, rgba(250, 250, 250, 0.4), rgba(250, 250, 250, 0))',\n    width: '100%',\n    height: 240,\n    alignItems: 'center',\n    padding: 10,\n  },\n  recipeName: {\n    color: 'black',\n    fontSize: 30,\n    fontWeight: 'bold',\n    textShadowColor: 'rgba(250, 250, 250, 0.5)',\n    textShadowOffset: { width: -1, height: 1 },\n    textShadowRadius: 10,\n    textAlign: 'center',\n  },\n  sectionTitle: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginVertical: 20,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    paddingBottom: 15,\n  },\n  ingredientContainer: {\n    height: 100,\n    width: 100,\n    backgroundColor: 'rgb(23, 153, 158)',\n    borderRadius: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  stepContainer: {\n    shadowColor: '#000',\n    shadowOffset: { width: 10, height: 10 },\n    shadowOpacity: 1,\n    shadowRadius: 10,\n  },\n  stepCard: {\n    alignSelf: 'center',\n    height: 180,\n    borderRadius: 5,\n    borderColor: 'black',\n    borderWidth: 1,\n    backgroundColor: '#FFF',\n    elevation: 10,\n    justifyContent: 'center',\n    paddingHorizontal: 10,\n  },\n});\n\ninterface Recipe {\n  strMealThumb: string\n  strMeal: string\n  strInstructions: string\n}\n\nexport default function Detail({ route: { params: { recipe } }, navigation: { goBack } }\n  : { route: { params: { recipe: Recipe } }, navigation: { goBack: any } }) {\n  const { height, width } = Dimensions.get('window');\n  const recipeStepWidth = +(width - width * 10 / 100).toFixed();\n  const linearGradientBoxHeight = height - 280;\n\n  let recipePhotoUri;\n  let recipeName;\n  const getRecipeNameAndPhoto = () => {\n    recipePhotoUri = recipe.strMealThumb;\n    recipeName = recipe.strMeal;\n  };\n\n  const ingredientsJSX: JSX.Element[] = [];\n  const addIngredientsAndMeasure = () => {\n    for (let i = 1; i < 21; i += 1) {\n      const ingredientName = recipe[`strIngredient${i}`];\n      const ingredientMeasure = recipe[`strMeasure${i}`];\n      if (ingredientName) {\n        ingredientsJSX.push(\n          <View key={i} style={{ alignItems: 'center', width: '33%', marginBottom: 15 }}>\n            <View style={styles.ingredientContainer}>\n              <Image\n                style={{\n                  height: 75, width: 75,\n                }}\n                source={{ uri: `https://www.themealdb.com/images/ingredients/${ingredientName}.png` }}\n              />\n            </View>\n            <Text style={{ width: '90%', textAlign: 'center' }}>\n              {\n              !ingredientName.includes(' ') && ingredientName.includes('-')\n                ? ingredientName.replace('-', '- ')\n                : ingredientName\n              }\n              {`\\n ${ingredientMeasure}`}\n            </Text>\n          </View>,\n        );\n      }\n    }\n  };\n\n  const stepsJSX: JSX.Element[] = [];\n  const arrayOfSteps: String[] = [];\n\n  const divideLengthyStepStrings = () => {\n    recipe.strInstructions.match(/[^\\r\\n]+/g).map((string) => {\n      const indexOfPoint = string.indexOf('. ', 150);\n      if (string.length > 150 && indexOfPoint !== -1) {\n        arrayOfSteps.push(string.substring(0, indexOfPoint + 1),\n          string.substring(indexOfPoint + 2));\n        return;\n      }\n      arrayOfSteps.push(string);\n    });\n  };\n\n  const addRecipeSteps = () => {\n    divideLengthyStepStrings();\n\n    arrayOfSteps.forEach((step, index) => {\n      let marginLeft = 10;\n      let marginRight = 0;\n      if (step === arrayOfSteps[0]) {\n        marginLeft = 20;\n      } else if (step === arrayOfSteps[arrayOfSteps.length - 1]) {\n        marginRight = 20;\n      }\n\n      stepsJSX.push(\n        <View\n          key={Math.random() * Date.now()}\n          style={[styles.stepContainer, { width: recipeStepWidth, marginLeft, marginRight }]}\n        >\n          <View style={[styles.stepCard, { width: recipeStepWidth }]}>\n            <Text style={{ textAlign: 'center', fontSize: 17 }}>{step}</Text>\n          </View>\n        </View>,\n      );\n    });\n  };\n\n  getRecipeNameAndPhoto();\n  addIngredientsAndMeasure();\n  addRecipeSteps();\n\n  return (\n    <View>\n      <StatusBar backgroundColor=\"black\" barStyle=\"light-content\" translucent />\n      <View style={styles.header}>\n        <Ionicons\n          size={42}\n          style={{\n            color: 'white',\n          }}\n          name=\"ios-arrow-round-back\"\n          type=\"ionicons\"\n          onPress={() => goBack()}\n        />\n      </View>\n      <ScrollView style={{ marginBottom: 40 }} showsVerticalScrollIndicator={false}>\n        <View>\n          <Image style={{ height: height - 40 }} source={{ uri: recipePhotoUri }} />\n          <LinearGradient\n            colors={['transparent', 'rgb(250, 250, 250)']}\n            style={[styles.linearGradientBox, { top: linearGradientBoxHeight }]}\n          >\n            <Text style={styles.recipeName}>\n              {recipeName}\n            </Text>\n          </LinearGradient>\n        </View>\n        <View>\n          <Text style={styles.sectionTitle}>\n            Ingredients\n          </Text>\n          <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n            {ingredientsJSX}\n          </View>\n        </View>\n        <View style={{ paddingBottom: 20 }}>\n          <Text style={styles.sectionTitle}>\n            Steps\n          </Text>\n          <ScrollView\n            horizontal\n            pagingEnabled\n            decelerationRate={0}\n            snapToInterval={recipeStepWidth + 10.1}\n            snapToAlignment=\"center\"\n            showsHorizontalScrollIndicator={false}\n          >\n            {stepsJSX}\n          </ScrollView>\n        </View>\n      </ScrollView>\n    </View>\n  );\n}\n\nDetail.propTypes = {\n  route: PropTypes.shape({\n    params: PropTypes.shape({\n      recipe: PropTypes.shape({\n        strMealThumb: PropTypes.string,\n        strMeal: PropTypes.string,\n        strInstructions: PropTypes.string,\n      }),\n    }),\n  }).isRequired,\n  navigation: PropTypes.shape({\n    goBack: PropTypes.func.isRequired,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}