{"ast":null,"code":"var _jsxFileName = \"/Users/davidmatochoya/Desktop/david-final-project/client/components/Home/Home.tsx\";\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { getRecipeFromAPI } from \"../../redux/actions/recipesActions\";\nvar styles = StyleSheet.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    zIndex: 1,\n    width: '100%',\n    height: 50,\n    backgroundColor: 'rgb(230, 84, 84)',\n    paddingHorizontal: 10,\n    justifyContent: 'center'\n  }\n});\n\nfunction Home(_ref) {\n  var _this = this;\n\n  var recipes = _ref.recipes,\n      actions = _ref.actions,\n      navigation = _ref.navigation;\n\n  var _Dimensions$get = Dimensions.get('window'),\n      height = _Dimensions$get.height;\n\n  var recipePhotoHeight = +(height - 114).toFixed();\n  var recipePhotoUri;\n  var recipeName;\n\n  var getRecipeNameAndPhoto = function getRecipeNameAndPhoto(index) {\n    recipePhotoUri = recipes[index].strMealThumb;\n    recipeName = recipes[index].strMeal;\n  };\n\n  var recipesJSX = [];\n\n  var addRecipeToScrollView = function addRecipeToScrollView(index) {\n    getRecipeNameAndPhoto(index);\n    recipesJSX.push(React.createElement(TouchableOpacity, {\n      key: Math.random() * Date.now(),\n      onPress: function onPress() {\n        return navigation.navigate('detail', {\n          recipe: recipes[index]\n        });\n      },\n      activeOpacity: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      style: {\n        height: recipePhotoHeight,\n        position: 'relative',\n        top: 50\n      },\n      source: {\n        uri: recipePhotoUri\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    })));\n  };\n\n  if (recipes.length) {\n    recipes.forEach(function (element, index) {\n      addRecipeToScrollView(index);\n    });\n  }\n\n  useEffect(function () {\n    if (!recipes.length) {\n      for (var i = 0; i < 3; i += 1) {\n        actions.getRecipeFromAPI();\n      }\n    }\n  }, []);\n  var scrollViewContentOffsetY = 0;\n  var goingDown;\n  return React.createElement(View, {\n    style: {\n      marginTop: StatusBar.currentHeight\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    backgroundColor: \"black\",\n    barStyle: \"light-content\",\n    translucent: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontSize: 25\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Recipes\")), React.createElement(ScrollView, {\n    pagingEnabled: true,\n    decelerationRate: 0,\n    snapToInterval: recipePhotoHeight,\n    snapToAlignment: \"center\",\n    showsVerticalScrollIndicator: false,\n    onScroll: function onScroll(event) {\n      if (event.nativeEvent.contentOffset.y > scrollViewContentOffsetY) {\n        goingDown = true;\n      } else {\n        goingDown = false;\n      }\n\n      scrollViewContentOffsetY = event.nativeEvent.contentOffset.y;\n    },\n    onScrollEndDrag: function onScrollEndDrag() {\n      if (goingDown) {\n        actions.getRecipeFromAPI();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, recipesJSX));\n}\n\nfunction mapStateToProps(_ref2) {\n  var recipesReducer = _ref2.recipesReducer;\n  debugger;\n  return {\n    recipes: recipesReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      getRecipeFromAPI: getRecipeFromAPI\n    }, dispatch)\n  };\n}\n\nHome.propTypes = {\n  recipes: PropTypes.arrayOf(PropTypes.object).isRequired,\n  actions: PropTypes.shape({\n    getRecipeFromAPI: PropTypes.func.isRequired\n  }).isRequired,\n  navigation: PropTypes.shape({\n    navigate: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/Users/davidmatochoya/Desktop/david-final-project/client/components/Home/Home.tsx"],"names":["React","useEffect","connect","bindActionCreators","PropTypes","ScrollView","getRecipeFromAPI","styles","StyleSheet","create","header","position","top","zIndex","width","height","backgroundColor","paddingHorizontal","justifyContent","Home","recipes","actions","navigation","Dimensions","get","recipePhotoHeight","toFixed","recipePhotoUri","recipeName","getRecipeNameAndPhoto","index","strMealThumb","strMeal","recipesJSX","addRecipeToScrollView","push","Math","random","Date","now","navigate","recipe","uri","length","forEach","element","i","scrollViewContentOffsetY","goingDown","marginTop","StatusBar","currentHeight","color","fontSize","event","nativeEvent","contentOffset","y","mapStateToProps","recipesReducer","mapDispatchToProps","dispatch","propTypes","arrayOf","object","isRequired","shape","func"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport {\n  View, Text, StatusBar, StyleSheet, Dimensions, Image, TouchableOpacity,\n} from 'react-native';\nimport { connect } from 'react-redux';\nimport { AnyAction, bindActionCreators, Dispatch } from 'redux';\nimport PropTypes from 'prop-types';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { getRecipeFromAPI } from '../../redux/actions/recipesActions';\n\nconst styles = StyleSheet.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    zIndex: 1,\n    width: '100%',\n    height: 50,\n    backgroundColor: 'rgb(230, 84, 84)',\n    paddingHorizontal: 10,\n    justifyContent: 'center',\n  },\n});\n\ninterface Recipe {\n    strMealThumb: string\n    strMeal: string\n}\n\nfunction Home({ recipes, actions, navigation }\n    : { recipes: Array<Recipe>, actions: object, navigation: object}) {\n  const { height } = Dimensions.get('window');\n  const recipePhotoHeight = +(height - 114).toFixed();\n\n  let recipePhotoUri: string;\n  let recipeName;\n  const getRecipeNameAndPhoto = (index: number) => {\n    recipePhotoUri = recipes[index].strMealThumb;\n    recipeName = recipes[index].strMeal;\n  };\n\n  const recipesJSX: JSX.Element[] = [];\n  const addRecipeToScrollView = (index: number) => {\n    getRecipeNameAndPhoto(index);\n    recipesJSX.push(\n      <TouchableOpacity\n        key={Math.random() * Date.now()}\n        onPress={() => navigation.navigate('detail', {\n          recipe: recipes[index],\n        })}\n        activeOpacity={1}\n      >\n        <Image\n          style={{ height: recipePhotoHeight, position: 'relative', top: 50 }}\n          source={{ uri: recipePhotoUri }}\n        />\n      </TouchableOpacity>,\n    );\n  };\n\n  if (recipes.length) {\n    recipes.forEach((element: object, index: number) => {\n      addRecipeToScrollView(index);\n    });\n  }\n\n  useEffect(() => {\n    if (!recipes.length) {\n      for (let i = 0; i < 3; i += 1) {\n        actions.getRecipeFromAPI();\n      }\n    }\n  }, []);\n  let scrollViewContentOffsetY = 0;\n  let goingDown : boolean;\n\n  return (\n    <View style={{ marginTop: StatusBar.currentHeight }}>\n      <StatusBar backgroundColor=\"black\" barStyle=\"light-content\" translucent />\n      <View style={styles.header}>\n        <Text style={{ color: 'white', fontSize: 25 }}>\n          Recipes\n        </Text>\n      </View>\n      <ScrollView\n        pagingEnabled\n        decelerationRate={0}\n        snapToInterval={recipePhotoHeight}\n        snapToAlignment=\"center\"\n        showsVerticalScrollIndicator={false}\n        onScroll={(event) => {\n          if (event.nativeEvent.contentOffset.y > scrollViewContentOffsetY) {\n            goingDown = true;\n          } else {\n            goingDown = false;\n          }\n          scrollViewContentOffsetY = event.nativeEvent.contentOffset.y;\n        }}\n        onScrollEndDrag={() => {\n          if (goingDown) {\n            actions.getRecipeFromAPI();\n          }\n        }}\n      >\n        {recipesJSX}\n      </ScrollView>\n    </View>\n  );\n}\n\nfunction mapStateToProps({ recipesReducer } : { recipesReducer: object}) {\n  debugger;\n  return {\n    recipes: recipesReducer,\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<AnyAction>) {\n  return {\n    actions: bindActionCreators({ getRecipeFromAPI }, dispatch),\n  };\n}\n\nHome.propTypes = {\n  recipes: PropTypes.arrayOf(PropTypes.object).isRequired,\n  actions: PropTypes.shape({\n    getRecipeFromAPI: PropTypes.func.isRequired,\n  }).isRequired,\n  navigation: PropTypes.shape({\n    navigate: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n"]},"metadata":{},"sourceType":"module"}