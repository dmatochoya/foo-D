{"ast":null,"code":"var _jsxFileName = \"/Users/davidmatochoya/Desktop/david-final-project/client/components/Category/Category.tsx\";\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { getRecipeFromAPI, getRecipeByNameFromAPI } from \"../../redux/actions/recipesActions\";\nvar styles = StyleSheet.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    zIndex: 1,\n    width: '100%',\n    height: 50,\n    backgroundColor: 'rgb(230, 84, 84)',\n    paddingHorizontal: 10,\n    justifyContent: 'center'\n  }\n});\n\nfunction Category(_ref) {\n  var _this = this;\n\n  var recipes = _ref.recipes,\n      categoryRecipes = _ref.categoryRecipes,\n      actions = _ref.actions,\n      navigation = _ref.navigation,\n      categoryName = _ref.route.params.categoryName;\n\n  var _Dimensions$get = Dimensions.get('window'),\n      height = _Dimensions$get.height;\n\n  var recipePhotoHeight = +(height - 114).toFixed();\n  var categoryRecipeIndex;\n  var recipePhotoUri;\n  var recipeName;\n\n  var getRecipeNameAndPhoto = function getRecipeNameAndPhoto(index) {\n    recipePhotoUri = categoryRecipes[index].strMealThumb;\n    recipeName = categoryRecipes[index].strMeal;\n  };\n\n  var recipesJSX = [];\n\n  var addRecipeToScrollView = function addRecipeToScrollView(index) {\n    getRecipeNameAndPhoto(index);\n    recipesJSX.push(React.createElement(TouchableOpacity, {\n      key: Math.random() * Date.now(),\n      onPress: function onPress() {\n        navigation.navigate('detail', {\n          recipe: categoryRecipes[index]\n        });\n      },\n      activeOpacity: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      style: {\n        height: recipePhotoHeight,\n        position: 'relative',\n        top: 50\n      },\n      source: {\n        uri: recipePhotoUri\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    })));\n  };\n\n  if (categoryRecipes.length === 3) {\n    console.log('entro');\n    categoryRecipes.forEach(function (element, index) {\n      addRecipeToScrollView(index);\n    });\n  }\n\n  useEffect(function () {\n    if (Object.keys(recipes).length) {\n      console.log('recipes vacio');\n\n      for (categoryRecipeIndex = 0; categoryRecipeIndex < 3; categoryRecipeIndex += 1) {\n        actions.getRecipeByNameFromAPI(recipes.meals[categoryRecipeIndex].strMeal, true);\n      }\n    }\n  }, []);\n  var scrollViewContentOffsetY = 0;\n  var goingDown;\n  return React.createElement(View, {\n    style: {\n      marginTop: StatusBar.currentHeight\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    backgroundColor: \"black\",\n    barStyle: \"light-content\",\n    translucent: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontSize: 25\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, categoryName + \" category\")), React.createElement(ScrollView, {\n    pagingEnabled: true,\n    decelerationRate: 0,\n    snapToInterval: recipePhotoHeight,\n    snapToAlignment: \"center\",\n    showsVerticalScrollIndicator: false,\n    onScroll: function onScroll(event) {\n      if (event.nativeEvent.contentOffset.y > scrollViewContentOffsetY) {\n        goingDown = true;\n      } else {\n        goingDown = false;\n      }\n\n      scrollViewContentOffsetY = event.nativeEvent.contentOffset.y;\n    },\n    onScrollEndDrag: function onScrollEndDrag() {\n      if (goingDown) {\n        actions.getRecipeFromAPI();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, recipesJSX));\n}\n\nfunction mapStateToProps(_ref2) {\n  var categoryRecipesReducer = _ref2.categoryRecipesReducer,\n      categoryRecipesByNameReducer = _ref2.categoryRecipesByNameReducer;\n  console.log(categoryRecipesByNameReducer.length);\n  return {\n    recipes: categoryRecipesReducer,\n    categoryRecipes: categoryRecipesByNameReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      getRecipeFromAPI: getRecipeFromAPI,\n      getRecipeByNameFromAPI: getRecipeByNameFromAPI\n    }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Category);","map":{"version":3,"sources":["/Users/davidmatochoya/Desktop/david-final-project/client/components/Category/Category.tsx"],"names":["React","useEffect","connect","bindActionCreators","ScrollView","getRecipeFromAPI","getRecipeByNameFromAPI","styles","StyleSheet","create","header","position","top","zIndex","width","height","backgroundColor","paddingHorizontal","justifyContent","Category","recipes","categoryRecipes","actions","navigation","categoryName","route","params","Dimensions","get","recipePhotoHeight","toFixed","categoryRecipeIndex","recipePhotoUri","recipeName","getRecipeNameAndPhoto","index","strMealThumb","strMeal","recipesJSX","addRecipeToScrollView","push","Math","random","Date","now","navigate","recipe","uri","length","console","log","forEach","element","Object","keys","meals","scrollViewContentOffsetY","goingDown","marginTop","StatusBar","currentHeight","color","fontSize","event","nativeEvent","contentOffset","y","mapStateToProps","categoryRecipesReducer","categoryRecipesByNameReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport {\n  View, Text, StatusBar, StyleSheet, Dimensions, Image, TouchableOpacity,\n} from 'react-native';\nimport { connect } from 'react-redux';\nimport { AnyAction, bindActionCreators, Dispatch } from 'redux';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { getRecipeFromAPI, getRecipeByNameFromAPI } from '../../redux/actions/recipesActions';\n\nconst styles = StyleSheet.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    zIndex: 1,\n    width: '100%',\n    height: 50,\n    backgroundColor: 'rgb(230, 84, 84)',\n    paddingHorizontal: 10,\n    justifyContent: 'center',\n  },\n});\n\ninterface Recipe {\n    strMealThumb: string\n    strMeal: string\n}\n\ninterface Navigation {\n    navigate(route: string, data: object): void\n}\n\nfunction Category({\n  recipes, categoryRecipes, actions, navigation, route: { params: { categoryName } },\n}\n    : { recipes: Array<Recipe>, actions: object, navigation: Navigation,\n        route: { params: { categoryName: string } } }) {\n  const { height } = Dimensions.get('window');\n  const recipePhotoHeight = +(height - 114).toFixed();\n  let categoryRecipeIndex;\n\n  let recipePhotoUri: string;\n  let recipeName;\n  const getRecipeNameAndPhoto = (index: number) => {\n    recipePhotoUri = categoryRecipes[index].strMealThumb;\n    recipeName = categoryRecipes[index].strMeal;\n  };\n\n  const recipesJSX: JSX.Element[] = [];\n  const addRecipeToScrollView = (index: number) => {\n    getRecipeNameAndPhoto(index);\n    recipesJSX.push(\n      <TouchableOpacity\n        key={Math.random() * Date.now()}\n        onPress={() => {\n          navigation.navigate('detail', {\n            recipe: categoryRecipes[index],\n          });\n        }}\n        activeOpacity={1}\n      >\n        <Image\n          style={{ height: recipePhotoHeight, position: 'relative', top: 50 }}\n          source={{ uri: recipePhotoUri }}\n        />\n      </TouchableOpacity>,\n    );\n  };\n\n  if (categoryRecipes.length === 3) {\n    console.log('entro');\n    categoryRecipes.forEach((element: object, index: number) => {\n      addRecipeToScrollView(index);\n    });\n  }\n\n  useEffect(() => {\n    if (Object.keys(recipes).length) {\n      console.log('recipes vacio');\n      for (categoryRecipeIndex = 0; categoryRecipeIndex < 3; categoryRecipeIndex += 1) {\n        actions.getRecipeByNameFromAPI(recipes.meals[categoryRecipeIndex].strMeal, true);\n      }\n    }\n  }, []);\n\n  let scrollViewContentOffsetY = 0;\n  let goingDown : boolean;\n\n  return (\n    <View style={{ marginTop: StatusBar.currentHeight }}>\n      <StatusBar backgroundColor=\"black\" barStyle=\"light-content\" translucent />\n      <View style={styles.header}>\n        <Text style={{ color: 'white', fontSize: 25 }}>\n          {`${categoryName} category`}\n        </Text>\n      </View>\n      <ScrollView\n        pagingEnabled\n        decelerationRate={0}\n        snapToInterval={recipePhotoHeight}\n        snapToAlignment=\"center\"\n        showsVerticalScrollIndicator={false}\n        onScroll={(event) => {\n          if (event.nativeEvent.contentOffset.y > scrollViewContentOffsetY) {\n            goingDown = true;\n          } else {\n            goingDown = false;\n          }\n          scrollViewContentOffsetY = event.nativeEvent.contentOffset.y;\n        }}\n        onScrollEndDrag={() => {\n          if (goingDown) {\n            actions.getRecipeFromAPI();\n          }\n        }}\n      >\n        {recipesJSX}\n      </ScrollView>\n    </View>\n  );\n}\n\nfunction mapStateToProps({ categoryRecipesReducer, categoryRecipesByNameReducer }\n    : { categoryRecipesReducer: object}) {\n  console.log(categoryRecipesByNameReducer.length);\n  return {\n    recipes: categoryRecipesReducer,\n    categoryRecipes: categoryRecipesByNameReducer,\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<AnyAction>) {\n  return {\n    actions: bindActionCreators({ getRecipeFromAPI, getRecipeByNameFromAPI }, dispatch),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Category);\n"]},"metadata":{},"sourceType":"module"}