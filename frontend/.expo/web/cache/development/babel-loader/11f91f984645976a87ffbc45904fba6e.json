{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/davidmatochoya/Desktop/david-final-project/client/components/List/TextInput.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { getRecipeByNameFromAPI, restoreSearchReducer } from \"../../redux/actions/recipesActions\";\nimport { getProductTypeFromFoodDB } from \"../../redux/actions/groceryListActions\";\n\nfunction SearchBoxInput(_ref) {\n  var searchBoxRef = _ref.searchBoxRef,\n      actions = _ref.actions,\n      navigation = _ref.navigation,\n      recipe = _ref.recipe;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  useEffect(function () {\n    if (Object.keys(recipe).length) {\n      navigation.navigate('detail', {\n        recipe: recipe\n      });\n      actions.restoreSearchReducer();\n    }\n  }, [Object.keys(recipe).length]);\n  return React.createElement(TextInput, {\n    style: {\n      height: 40,\n      fontSize: 17,\n      width: '100%'\n    },\n    placeholder: \"Add an item to your list here!\",\n    onChangeText: function onChangeText(textChange) {\n      return setText(textChange);\n    },\n    defaultValue: text,\n    ref: searchBoxRef,\n    onSubmitEditing: function onSubmitEditing() {\n      if (text) {\n        actions.getProductTypeFromFoodDB(text.toLowerCase());\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction mapStateToProps(_ref2) {\n  var searchReducer = _ref2.searchReducer;\n  return {\n    recipe: searchReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      getRecipeByNameFromAPI: getRecipeByNameFromAPI,\n      restoreSearchReducer: restoreSearchReducer,\n      getProductTypeFromFoodDB: getProductTypeFromFoodDB\n    }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBoxInput);","map":{"version":3,"sources":["/Users/davidmatochoya/Desktop/david-final-project/client/components/List/TextInput.tsx"],"names":["React","useState","useEffect","connect","bindActionCreators","getRecipeByNameFromAPI","restoreSearchReducer","getProductTypeFromFoodDB","SearchBoxInput","searchBoxRef","actions","navigation","recipe","text","setText","Object","keys","length","navigate","height","fontSize","width","textChange","toLowerCase","mapStateToProps","searchReducer","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAoBC,kBAApB,QAAwD,OAAxD;AACA,SAASC,sBAAT,EAAiCC,oBAAjC;AACA,SAASC,wBAAT;;AAkBA,SAASC,cAAT,OAEW;AAAA,MADTC,YACS,QADTA,YACS;AAAA,MADKC,OACL,QADKA,OACL;AAAA,MADcC,UACd,QADcA,UACd;AAAA,MAD0BC,MAC1B,QAD0BA,MAC1B;;AAAA,kBACeX,QAAQ,CAAS,EAAT,CADvB;AAAA;AAAA,MACFY,IADE;AAAA,MACIC,OADJ;;AAGTZ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIa,MAAM,CAACC,IAAP,CAAYJ,MAAZ,EAAoBK,MAAxB,EAAgC;AAC9BN,MAAAA,UAAU,CAACO,QAAX,CAAoB,QAApB,EAA8B;AAC5BN,QAAAA,MAAM,EAANA;AAD4B,OAA9B;AAGAF,MAAAA,OAAO,CAACJ,oBAAR;AACD;AACF,GAPQ,EAON,CAACS,MAAM,CAACC,IAAP,CAAYJ,MAAZ,EAAoBK,MAArB,CAPM,CAAT;AASA,SACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,QAAQ,EAAE,EAAxB;AAA4BC,MAAAA,KAAK,EAAE;AAAnC,KADT;AAEE,IAAA,WAAW,EAAC,gCAFd;AAGE,IAAA,YAAY,EAAE,sBAACC,UAAD;AAAA,aAAgBR,OAAO,CAACQ,UAAD,CAAvB;AAAA,KAHhB;AAIE,IAAA,YAAY,EAAET,IAJhB;AAKE,IAAA,GAAG,EAAEJ,YALP;AAME,IAAA,eAAe,EAAE,2BAAM;AACrB,UAAII,IAAJ,EAAU;AACRH,QAAAA,OAAO,CAACH,wBAAR,CAAiCM,IAAI,CAACU,WAAL,EAAjC;AACD;AACF,KAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAcD;;AAED,SAASC,eAAT,QACgC;AAAA,MADLC,aACK,SADLA,aACK;AAC9B,SAAO;AACLb,IAAAA,MAAM,EAAEa;AADH,GAAP;AAGD;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAA2D;AACzD,SAAO;AACLjB,IAAAA,OAAO,EAAEN,kBAAkB,CAAC;AAC1BC,MAAAA,sBAAsB,EAAtBA,sBAD0B;AAE1BC,MAAAA,oBAAoB,EAApBA,oBAF0B;AAG1BC,MAAAA,wBAAwB,EAAxBA;AAH0B,KAAD,EAIxBoB,QAJwB;AADtB,GAAP;AAOD;;AAED,eAAexB,OAAO,CAACqB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ClB,cAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextInput } from 'react-native';\nimport { connect } from 'react-redux';\nimport { AnyAction, bindActionCreators, Dispatch } from 'redux';\nimport { getRecipeByNameFromAPI, restoreSearchReducer } from '../../redux/actions/recipesActions';\nimport { getProductTypeFromFoodDB } from '../../redux/actions/groceryListActions';\n\ninterface Actions {\n    getRecipeByNameFromAPI(text : string, boolean: boolean) : void\n    restoreSearchReducer() : void\n}\n\ninterface Navigation {\n    navigate(route: string, data: object): void\n  }\n\ninterface Props {\n    searchBoxRef(): void\n    actions: Actions\n    navigation: Navigation\n    recipe: object\n}\n\nfunction SearchBoxInput({\n  searchBoxRef, actions, navigation, recipe,\n} : Props) {\n  const [text, setText] = useState<string>('');\n\n  useEffect(() => {\n    if (Object.keys(recipe).length) {\n      navigation.navigate('detail', {\n        recipe,\n      });\n      actions.restoreSearchReducer();\n    }\n  }, [Object.keys(recipe).length]);\n\n  return (\n    <TextInput\n      style={{ height: 40, fontSize: 17, width: '100%' }}\n      placeholder=\"Add an item to your list here!\"\n      onChangeText={(textChange) => setText(textChange)}\n      defaultValue={text}\n      ref={searchBoxRef}\n      onSubmitEditing={() => {\n        if (text) {\n          actions.getProductTypeFromFoodDB(text.toLowerCase());\n        }\n      }}\n    />\n  );\n}\n\nfunction mapStateToProps({ searchReducer }\n    : { searchReducer: object}) {\n  return {\n    recipe: searchReducer,\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<AnyAction>) {\n  return {\n    actions: bindActionCreators({\n      getRecipeByNameFromAPI,\n      restoreSearchReducer,\n      getProductTypeFromFoodDB,\n    }, dispatch),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBoxInput);\n"]},"metadata":{},"sourceType":"module"}