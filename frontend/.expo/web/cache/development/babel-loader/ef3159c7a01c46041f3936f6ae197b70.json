{"ast":null,"code":"var _jsxFileName = \"/Users/davidmatochoya/Desktop/david-final-project/client/components/Detail/Detail.tsx\";\nimport React, { useEffect } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { getRecipeFromAPI } from \"../../redux/actions/recipesActions\";\nvar styles = StyleSheet.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    zIndex: 1,\n    marginTop: StatusBar.currentHeight,\n    width: '100%',\n    backgroundColor: 'rgb(230, 84, 84)',\n    paddingHorizontal: 10\n  },\n  linearGradientBox: {\n    position: 'absolute',\n    backgroundColor: 'linear-gradient(45deg, rgba(250, 250, 250, 0.4), rgba(250, 250, 250, 0))',\n    width: '100%',\n    height: 240,\n    alignItems: 'center',\n    paddingTop: 10\n  },\n  recipeName: {\n    color: 'black',\n    fontSize: 30,\n    fontWeight: 'bold',\n    textShadowColor: 'rgba(250, 250, 250, 0.5)',\n    textShadowOffset: {\n      width: -1,\n      height: 1\n    },\n    textShadowRadius: 10\n  },\n  sectionTitle: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginVertical: 20,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    paddingBottom: 15\n  },\n  ingredientContainer: {\n    height: 100,\n    width: 100,\n    backgroundColor: 'rgb(23, 153, 158)',\n    borderRadius: 50,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  stepContainer: {\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 10,\n      height: 10\n    },\n    shadowOpacity: 1,\n    shadowRadius: 10,\n    marginLeft: 15\n  },\n  stepCard: {\n    alignSelf: 'center',\n    height: 150,\n    borderRadius: 5,\n    borderColor: 'black',\n    borderWidth: 1,\n    backgroundColor: '#FFF',\n    elevation: 10,\n    justifyContent: 'center',\n    paddingHorizontal: 10\n  }\n});\n\nfunction Detail(_ref) {\n  var _this = this;\n\n  var recipe = _ref.recipe,\n      actions = _ref.actions;\n\n  var _Dimensions$get = Dimensions.get('window'),\n      height = _Dimensions$get.height,\n      width = _Dimensions$get.width;\n\n  var recipeStepWidth = width - width * 10 / 100;\n  var linearGradientBoxHeight = height - 280;\n  var recipeReducerStateLength = Object.keys(recipe).length;\n  var recipePhotoUri;\n  var recipeName;\n\n  var getRecipeNameAndPhoto = function getRecipeNameAndPhoto() {\n    recipePhotoUri = recipe.meals[0].strMealThumb;\n    recipeName = recipe.meals[0].strMeal;\n  };\n\n  var ingredientsJSX = [];\n\n  var addIngredientsAndMeasure = function addIngredientsAndMeasure() {\n    for (var i = 1; i < 21; i += 1) {\n      var ingredientName = recipe.meals[0][\"strIngredient\" + i];\n      var ingredientMeasure = recipe.meals[0][\"strMeasure\" + i];\n\n      if (ingredientName) {\n        ingredientsJSX.push(React.createElement(View, {\n          key: i,\n          style: {\n            alignItems: 'center',\n            width: '33%',\n            marginBottom: 15\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: styles.ingredientContainer,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          style: {\n            height: 75,\n            width: 75\n          },\n          source: {\n            uri: \"https://www.themealdb.com/images/ingredients/\" + ingredientName + \".png\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }\n        })), React.createElement(Text, {\n          style: {\n            width: '90%',\n            textAlign: 'center'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }\n        }, !ingredientName.includes(' ') && ingredientName.includes('-') ? ingredientName.replace('-', '- ') : ingredientName, \"\\n \" + ingredientMeasure)));\n      }\n    }\n  };\n\n  var stepsJSX = [];\n  var arrayOfSteps = [];\n\n  var divideLengthyStepStrings = function divideLengthyStepStrings() {\n    recipe.meals[0].strInstructions.match(/[^\\r\\n]+/g).map(function (string) {\n      var indexOfPoint = string.indexOf('. ', 201);\n\n      if (string.length > 200 && indexOfPoint !== -1) {\n        arrayOfSteps.push(string.substring(0, indexOfPoint + 1), string.substring(indexOfPoint + 2));\n        return;\n      }\n\n      arrayOfSteps.push(string);\n    });\n  };\n\n  var addRecipeSteps = function addRecipeSteps() {\n    divideLengthyStepStrings();\n    arrayOfSteps.map(function (step) {\n      return stepsJSX.push(React.createElement(View, {\n        key: Math.random() * Date.now(),\n        style: [styles.stepContainer, {\n          width: recipeStepWidth\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: [styles.stepCard, {\n          width: recipeStepWidth\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: 'center',\n          fontSize: 17\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }\n      }, step))));\n    });\n  };\n\n  if (recipeReducerStateLength) {\n    getRecipeNameAndPhoto();\n    addIngredientsAndMeasure();\n    addRecipeSteps();\n  }\n\n  useEffect(function () {\n    if (!recipeReducerStateLength) {\n      actions.getRecipeFromAPI();\n    }\n  }, [recipeReducerStateLength]);\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    backgroundColor: \"black\",\n    barStyle: \"light-content\",\n    translucent: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, React.createElement(Ionicons, {\n    size: 40,\n    style: {\n      color: 'white'\n    },\n    name: \"ios-arrow-round-back\",\n    type: \"ionicons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  })), React.createElement(ScrollView, {\n    style: {\n      marginBottom: 40\n    },\n    showsVerticalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: {\n      height: height - 40\n    },\n    source: {\n      uri: recipePhotoUri\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }), React.createElement(LinearGradient, {\n    colors: ['transparent', 'rgb(250, 250, 250)'],\n    style: [styles.linearGradientBox, {\n      top: linearGradientBoxHeight\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.recipeName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, recipeName))), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.sectionTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, \"Ingredients\"), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      flexWrap: 'wrap'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, ingredientsJSX)), React.createElement(View, {\n    style: {\n      paddingBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.sectionTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, \"Steps\"), React.createElement(ScrollView, {\n    horizontal: true,\n    pagingEnabled: true,\n    decelerationRate: 0,\n    snapToInterval: recipeStepWidth + 10,\n    snapToAlignment: \"center\",\n    showsHorizontalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, stepsJSX))));\n}\n\nfunction mapStateToProps(_ref2) {\n  var recipesReducer = _ref2.recipesReducer;\n  return {\n    recipe: recipesReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      getRecipeFromAPI: getRecipeFromAPI\n    }, dispatch)\n  };\n}\n\nDetail.propTypes = {\n  recipe: PropTypes.shape({\n    meals: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired,\n  actions: PropTypes.shape({\n    getRecipeFromAPI: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail);","map":{"version":3,"sources":["/Users/davidmatochoya/Desktop/david-final-project/client/components/Detail/Detail.tsx"],"names":["React","useEffect","Ionicons","LinearGradient","connect","bindActionCreators","PropTypes","getRecipeFromAPI","styles","StyleSheet","create","header","position","top","zIndex","marginTop","StatusBar","currentHeight","width","backgroundColor","paddingHorizontal","linearGradientBox","height","alignItems","paddingTop","recipeName","color","fontSize","fontWeight","textShadowColor","textShadowOffset","textShadowRadius","sectionTitle","textAlign","marginVertical","borderBottomWidth","hairlineWidth","paddingBottom","ingredientContainer","borderRadius","justifyContent","stepContainer","shadowColor","shadowOffset","shadowOpacity","shadowRadius","marginLeft","stepCard","alignSelf","borderColor","borderWidth","elevation","Detail","recipe","actions","Dimensions","get","recipeStepWidth","linearGradientBoxHeight","recipeReducerStateLength","Object","keys","length","recipePhotoUri","getRecipeNameAndPhoto","meals","strMealThumb","strMeal","ingredientsJSX","addIngredientsAndMeasure","i","ingredientName","ingredientMeasure","push","marginBottom","uri","includes","replace","stepsJSX","arrayOfSteps","divideLengthyStepStrings","strInstructions","match","map","string","indexOfPoint","indexOf","substring","addRecipeSteps","step","Math","random","Date","now","flexDirection","flexWrap","mapStateToProps","recipesReducer","mapDispatchToProps","dispatch","propTypes","shape","arrayOf","object","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;AAIA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAoBC,kBAApB,QAAwD,OAAxD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,gBAAT;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,UADJ;AAENC,IAAAA,GAAG,EAAE,CAFC;AAGNC,IAAAA,MAAM,EAAE,CAHF;AAINC,IAAAA,SAAS,EAAEC,SAAS,CAACC,aAJf;AAKNC,IAAAA,KAAK,EAAE,MALD;AAMNC,IAAAA,eAAe,EAAE,kBANX;AAONC,IAAAA,iBAAiB,EAAE;AAPb,GADuB;AAU/BC,EAAAA,iBAAiB,EAAE;AACjBT,IAAAA,QAAQ,EAAE,UADO;AAEjBO,IAAAA,eAAe,EAAE,0EAFA;AAGjBD,IAAAA,KAAK,EAAE,MAHU;AAIjBI,IAAAA,MAAM,EAAE,GAJS;AAKjBC,IAAAA,UAAU,EAAE,QALK;AAMjBC,IAAAA,UAAU,EAAE;AANK,GAVY;AAkB/BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE,OADG;AAEVC,IAAAA,QAAQ,EAAE,EAFA;AAGVC,IAAAA,UAAU,EAAE,MAHF;AAIVC,IAAAA,eAAe,EAAE,0BAJP;AAKVC,IAAAA,gBAAgB,EAAE;AAAEZ,MAAAA,KAAK,EAAE,CAAC,CAAV;AAAaI,MAAAA,MAAM,EAAE;AAArB,KALR;AAMVS,IAAAA,gBAAgB,EAAE;AANR,GAlBmB;AA0B/BC,EAAAA,YAAY,EAAE;AACZL,IAAAA,QAAQ,EAAE,EADE;AAEZC,IAAAA,UAAU,EAAE,MAFA;AAGZK,IAAAA,SAAS,EAAE,QAHC;AAIZC,IAAAA,cAAc,EAAE,EAJJ;AAKZC,IAAAA,iBAAiB,EAAE1B,UAAU,CAAC2B,aALlB;AAMZC,IAAAA,aAAa,EAAE;AANH,GA1BiB;AAkC/BC,EAAAA,mBAAmB,EAAE;AACnBhB,IAAAA,MAAM,EAAE,GADW;AAEnBJ,IAAAA,KAAK,EAAE,GAFY;AAGnBC,IAAAA,eAAe,EAAE,mBAHE;AAInBoB,IAAAA,YAAY,EAAE,EAJK;AAKnBC,IAAAA,cAAc,EAAE,QALG;AAMnBjB,IAAAA,UAAU,EAAE;AANO,GAlCU;AA0C/BkB,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE,MADA;AAEbC,IAAAA,YAAY,EAAE;AAAEzB,MAAAA,KAAK,EAAE,EAAT;AAAaI,MAAAA,MAAM,EAAE;AAArB,KAFD;AAGbsB,IAAAA,aAAa,EAAE,CAHF;AAIbC,IAAAA,YAAY,EAAE,EAJD;AAKbC,IAAAA,UAAU,EAAE;AALC,GA1CgB;AAiD/BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE,QADH;AAER1B,IAAAA,MAAM,EAAE,GAFA;AAGRiB,IAAAA,YAAY,EAAE,CAHN;AAIRU,IAAAA,WAAW,EAAE,OAJL;AAKRC,IAAAA,WAAW,EAAE,CALL;AAMR/B,IAAAA,eAAe,EAAE,MANT;AAORgC,IAAAA,SAAS,EAAE,EAPH;AAQRX,IAAAA,cAAc,EAAE,QARR;AASRpB,IAAAA,iBAAiB,EAAE;AATX;AAjDqB,CAAlB,CAAf;;AA8DA,SAASgC,MAAT,OAA0E;AAAA;;AAAA,MAAxDC,MAAwD,QAAxDA,MAAwD;AAAA,MAAhDC,OAAgD,QAAhDA,OAAgD;;AAAA,wBAC9CC,UAAU,CAACC,GAAX,CAAe,QAAf,CAD8C;AAAA,MAChElC,MADgE,mBAChEA,MADgE;AAAA,MACxDJ,KADwD,mBACxDA,KADwD;;AAExE,MAAMuC,eAAe,GAAGvC,KAAK,GAAGA,KAAK,GAAG,EAAR,GAAa,GAA7C;AACA,MAAMwC,uBAAuB,GAAGpC,MAAM,GAAG,GAAzC;AAEA,MAAMqC,wBAAwB,GAAGC,MAAM,CAACC,IAAP,CAAYR,MAAZ,EAAoBS,MAArD;AAEA,MAAIC,cAAJ;AACA,MAAItC,UAAJ;;AACA,MAAMuC,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAClCD,IAAAA,cAAc,GAAGV,MAAM,CAACY,KAAP,CAAa,CAAb,EAAgBC,YAAjC;AACAzC,IAAAA,UAAU,GAAG4B,MAAM,CAACY,KAAP,CAAa,CAAb,EAAgBE,OAA7B;AACD,GAHD;;AAKA,MAAMC,cAA6B,GAAG,EAAtC;;AACA,MAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAM;AACrC,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,IAAI,CAA7B,EAAgC;AAC9B,UAAMC,cAAc,GAAGlB,MAAM,CAACY,KAAP,CAAa,CAAb,oBAAgCK,CAAhC,CAAvB;AACA,UAAME,iBAAiB,GAAGnB,MAAM,CAACY,KAAP,CAAa,CAAb,iBAA6BK,CAA7B,CAA1B;;AACA,UAAIC,cAAJ,EAAoB;AAClBH,QAAAA,cAAc,CAACK,IAAf,CACE,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEH,CAAX;AAAc,UAAA,KAAK,EAAE;AAAE/C,YAAAA,UAAU,EAAE,QAAd;AAAwBL,YAAAA,KAAK,EAAE,KAA/B;AAAsCwD,YAAAA,YAAY,EAAE;AAApD,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAElE,MAAM,CAAC8B,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD;AACE,UAAA,KAAK,EAAE;AACLhB,YAAAA,MAAM,EAAE,EADH;AACOJ,YAAAA,KAAK,EAAE;AADd,WADT;AAIE,UAAA,MAAM,EAAE;AAAEyD,YAAAA,GAAG,oDAAkDJ,cAAlD;AAAL,WAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,EASE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAErD,YAAAA,KAAK,EAAE,KAAT;AAAgBe,YAAAA,SAAS,EAAE;AAA3B,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEI,CAACsC,cAAc,CAACK,QAAf,CAAwB,GAAxB,CAAD,IAAiCL,cAAc,CAACK,QAAf,CAAwB,GAAxB,CAAjC,GACIL,cAAc,CAACM,OAAf,CAAuB,GAAvB,EAA4B,IAA5B,CADJ,GAEIN,cAJR,UAMSC,iBANT,CATF,CADF;AAoBD;AACF;AACF,GA3BD;;AA6BA,MAAMM,QAAuB,GAAG,EAAhC;AACA,MAAMC,YAAsB,GAAG,EAA/B;;AAEA,MAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAM;AACrC3B,IAAAA,MAAM,CAACY,KAAP,CAAa,CAAb,EAAgBgB,eAAhB,CAAgCC,KAAhC,CAAsC,WAAtC,EAAmDC,GAAnD,CAAuD,UAACC,MAAD,EAAY;AACjE,UAAMC,YAAY,GAAGD,MAAM,CAACE,OAAP,CAAe,IAAf,EAAqB,GAArB,CAArB;;AACA,UAAIF,MAAM,CAACtB,MAAP,GAAgB,GAAhB,IAAuBuB,YAAY,KAAK,CAAC,CAA7C,EAAgD;AAC9CN,QAAAA,YAAY,CAACN,IAAb,CAAkBW,MAAM,CAACG,SAAP,CAAiB,CAAjB,EAAoBF,YAAY,GAAG,CAAnC,CAAlB,EACED,MAAM,CAACG,SAAP,CAAiBF,YAAY,GAAG,CAAhC,CADF;AAEA;AACD;;AACDN,MAAAA,YAAY,CAACN,IAAb,CAAkBW,MAAlB;AACD,KARD;AASD,GAVD;;AAYA,MAAMI,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BR,IAAAA,wBAAwB;AAExBD,IAAAA,YAAY,CAACI,GAAb,CAAiB,UAACM,IAAD;AAAA,aACfX,QAAQ,CAACL,IAAT,CACE,oBAAC,IAAD;AACE,QAAA,GAAG,EAAEiB,IAAI,CAACC,MAAL,KAAgBC,IAAI,CAACC,GAAL,EADvB;AAEE,QAAA,KAAK,EAAE,CAACrF,MAAM,CAACiC,aAAR,EAAuB;AAAEvB,UAAAA,KAAK,EAAEuC;AAAT,SAAvB,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACjD,MAAM,CAACuC,QAAR,EAAkB;AAAE7B,UAAAA,KAAK,EAAEuC;AAAT,SAAlB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAExB,UAAAA,SAAS,EAAE,QAAb;AAAuBN,UAAAA,QAAQ,EAAE;AAAjC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqD8D,IAArD,CADF,CAJF,CADF,CADe;AAAA,KAAjB;AAYD,GAfD;;AAiBA,MAAI9B,wBAAJ,EAA8B;AAC5BK,IAAAA,qBAAqB;AACrBK,IAAAA,wBAAwB;AACxBmB,IAAAA,cAAc;AACf;;AAEDvF,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAAC0D,wBAAL,EAA+B;AAC7BL,MAAAA,OAAO,CAAC/C,gBAAR;AACD;AACF,GAJQ,EAIN,CAACoD,wBAAD,CAJM,CAAT;AAMA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,eAAe,EAAC,OAA3B;AAAmC,IAAA,QAAQ,EAAC,eAA5C;AAA4D,IAAA,WAAW,MAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnD,MAAM,CAACG,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAE,EADR;AAEE,IAAA,KAAK,EAAE;AACLe,MAAAA,KAAK,EAAE;AADF,KAFT;AAKE,IAAA,IAAI,EAAC,sBALP;AAME,IAAA,IAAI,EAAC,UANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAYE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAAEgD,MAAAA,YAAY,EAAE;AAAhB,KAAnB;AAAyC,IAAA,4BAA4B,EAAE,KAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEpD,MAAAA,MAAM,EAAEA,MAAM,GAAG;AAAnB,KAAd;AAAuC,IAAA,MAAM,EAAE;AAAEqD,MAAAA,GAAG,EAAEZ;AAAP,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,cAAD;AACE,IAAA,MAAM,EAAE,CAAC,aAAD,EAAgB,oBAAhB,CADV;AAEE,IAAA,KAAK,EAAE,CAACvD,MAAM,CAACa,iBAAR,EAA2B;AAAER,MAAAA,GAAG,EAAE6C;AAAP,KAA3B,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElD,MAAM,CAACiB,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,UADH,CAJF,CAFF,CADF,EAYE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjB,MAAM,CAACwB,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE8D,MAAAA,aAAa,EAAE,KAAjB;AAAwBC,MAAAA,QAAQ,EAAE;AAAlC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG3B,cADH,CAJF,CAZF,EAoBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE/B,MAAAA,aAAa,EAAE;AAAjB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE7B,MAAM,CAACwB,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAIE,oBAAC,UAAD;AACE,IAAA,UAAU,MADZ;AAEE,IAAA,aAAa,MAFf;AAGE,IAAA,gBAAgB,EAAE,CAHpB;AAIE,IAAA,cAAc,EAAEyB,eAAe,GAAG,EAJpC;AAKE,IAAA,eAAe,EAAC,QALlB;AAME,IAAA,8BAA8B,EAAE,KANlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGqB,QARH,CAJF,CApBF,CAZF,CADF;AAmDD;;AAED,SAASkB,eAAT,QAAyE;AAAA,MAA9CC,cAA8C,SAA9CA,cAA8C;AACvE,SAAO;AACL5C,IAAAA,MAAM,EAAE4C;AADH,GAAP;AAGD;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAA2D;AACzD,SAAO;AACL7C,IAAAA,OAAO,EAAEjD,kBAAkB,CAAC;AAAEE,MAAAA,gBAAgB,EAAhBA;AAAF,KAAD,EAAuB4F,QAAvB;AADtB,GAAP;AAGD;;AAED/C,MAAM,CAACgD,SAAP,GAAmB;AACjB/C,EAAAA,MAAM,EAAE/C,SAAS,CAAC+F,KAAV,CAAgB;AACtBpC,IAAAA,KAAK,EAAE3D,SAAS,CAACgG,OAAV,CAAkBhG,SAAS,CAACiG,MAA5B;AADe,GAAhB,EAELC,UAHc;AAIjBlD,EAAAA,OAAO,EAAEhD,SAAS,CAAC+F,KAAV,CAAgB;AACvB9F,IAAAA,gBAAgB,EAAED,SAAS,CAACmG,IAAV,CAAeD;AADV,GAAhB,EAENA;AANc,CAAnB;AASA,eAAepG,OAAO,CAAC4F,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C9C,MAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport {\n  Dimensions, Text, ScrollView, View, StatusBar, Image, StyleSheet,\n} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { connect } from 'react-redux';\nimport { AnyAction, bindActionCreators, Dispatch } from 'redux';\nimport PropTypes from 'prop-types';\nimport { getRecipeFromAPI } from '../../redux/actions/recipesActions';\n\nconst styles = StyleSheet.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    zIndex: 1,\n    marginTop: StatusBar.currentHeight,\n    width: '100%',\n    backgroundColor: 'rgb(230, 84, 84)',\n    paddingHorizontal: 10,\n  },\n  linearGradientBox: {\n    position: 'absolute',\n    backgroundColor: 'linear-gradient(45deg, rgba(250, 250, 250, 0.4), rgba(250, 250, 250, 0))',\n    width: '100%',\n    height: 240,\n    alignItems: 'center',\n    paddingTop: 10,\n  },\n  recipeName: {\n    color: 'black',\n    fontSize: 30,\n    fontWeight: 'bold',\n    textShadowColor: 'rgba(250, 250, 250, 0.5)',\n    textShadowOffset: { width: -1, height: 1 },\n    textShadowRadius: 10,\n  },\n  sectionTitle: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginVertical: 20,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    paddingBottom: 15,\n  },\n  ingredientContainer: {\n    height: 100,\n    width: 100,\n    backgroundColor: 'rgb(23, 153, 158)',\n    borderRadius: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  stepContainer: {\n    shadowColor: '#000',\n    shadowOffset: { width: 10, height: 10 },\n    shadowOpacity: 1,\n    shadowRadius: 10,\n    marginLeft: 15,\n  },\n  stepCard: {\n    alignSelf: 'center',\n    height: 150,\n    borderRadius: 5,\n    borderColor: 'black',\n    borderWidth: 1,\n    backgroundColor: '#FFF',\n    elevation: 10,\n    justifyContent: 'center',\n    paddingHorizontal: 10,\n  },\n});\n\nfunction Detail({ recipe, actions } : { recipe: Object, actions: Object}) {\n  const { height, width } = Dimensions.get('window');\n  const recipeStepWidth = width - width * 10 / 100;\n  const linearGradientBoxHeight = height - 280;\n\n  const recipeReducerStateLength = Object.keys(recipe).length;\n\n  let recipePhotoUri;\n  let recipeName;\n  const getRecipeNameAndPhoto = () => {\n    recipePhotoUri = recipe.meals[0].strMealThumb;\n    recipeName = recipe.meals[0].strMeal;\n  };\n\n  const ingredientsJSX: JSX.Element[] = [];\n  const addIngredientsAndMeasure = () => {\n    for (let i = 1; i < 21; i += 1) {\n      const ingredientName = recipe.meals[0][`strIngredient${i}`];\n      const ingredientMeasure = recipe.meals[0][`strMeasure${i}`];\n      if (ingredientName) {\n        ingredientsJSX.push(\n          <View key={i} style={{ alignItems: 'center', width: '33%', marginBottom: 15 }}>\n            <View style={styles.ingredientContainer}>\n              <Image\n                style={{\n                  height: 75, width: 75,\n                }}\n                source={{ uri: `https://www.themealdb.com/images/ingredients/${ingredientName}.png` }}\n              />\n            </View>\n            <Text style={{ width: '90%', textAlign: 'center' }}>\n              {\n                !ingredientName.includes(' ') && ingredientName.includes('-')\n                  ? ingredientName.replace('-', '- ')\n                  : ingredientName\n                }\n              {`\\n ${ingredientMeasure}`}\n            </Text>\n          </View>,\n        );\n      }\n    }\n  };\n\n  const stepsJSX: JSX.Element[] = [];\n  const arrayOfSteps: String[] = [];\n\n  const divideLengthyStepStrings = () => {\n    recipe.meals[0].strInstructions.match(/[^\\r\\n]+/g).map((string) => {\n      const indexOfPoint = string.indexOf('. ', 201);\n      if (string.length > 200 && indexOfPoint !== -1) {\n        arrayOfSteps.push(string.substring(0, indexOfPoint + 1),\n          string.substring(indexOfPoint + 2));\n        return;\n      }\n      arrayOfSteps.push(string);\n    });\n  };\n\n  const addRecipeSteps = () => {\n    divideLengthyStepStrings();\n\n    arrayOfSteps.map((step) => (\n      stepsJSX.push(\n        <View\n          key={Math.random() * Date.now()}\n          style={[styles.stepContainer, { width: recipeStepWidth }]}\n        >\n          <View style={[styles.stepCard, { width: recipeStepWidth }]}>\n            <Text style={{ textAlign: 'center', fontSize: 17 }}>{step}</Text>\n          </View>\n        </View>,\n      )\n    ));\n  };\n\n  if (recipeReducerStateLength) {\n    getRecipeNameAndPhoto();\n    addIngredientsAndMeasure();\n    addRecipeSteps();\n  }\n\n  useEffect(() => {\n    if (!recipeReducerStateLength) {\n      actions.getRecipeFromAPI();\n    }\n  }, [recipeReducerStateLength]);\n\n  return (\n    <View>\n      <StatusBar backgroundColor=\"black\" barStyle=\"light-content\" translucent />\n      <View style={styles.header}>\n        <Ionicons\n          size={40}\n          style={{\n            color: 'white',\n          }}\n          name=\"ios-arrow-round-back\"\n          type=\"ionicons\"\n        />\n      </View>\n      <ScrollView style={{ marginBottom: 40 }} showsVerticalScrollIndicator={false}>\n        <View>\n          <Image style={{ height: height - 40 }} source={{ uri: recipePhotoUri }} />\n          <LinearGradient\n            colors={['transparent', 'rgb(250, 250, 250)']}\n            style={[styles.linearGradientBox, { top: linearGradientBoxHeight }]}\n          >\n            <Text style={styles.recipeName}>\n              {recipeName}\n            </Text>\n          </LinearGradient>\n        </View>\n        <View>\n          <Text style={styles.sectionTitle}>\n            Ingredients\n          </Text>\n          <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n            {ingredientsJSX}\n          </View>\n        </View>\n        <View style={{ paddingBottom: 20 }}>\n          <Text style={styles.sectionTitle}>\n            Steps\n          </Text>\n          <ScrollView\n            horizontal\n            pagingEnabled\n            decelerationRate={0}\n            snapToInterval={recipeStepWidth + 10}\n            snapToAlignment=\"center\"\n            showsHorizontalScrollIndicator={false}\n          >\n            {stepsJSX}\n          </ScrollView>\n        </View>\n      </ScrollView>\n    </View>\n  );\n}\n\nfunction mapStateToProps({ recipesReducer } : { recipesReducer: Object}) {\n  return {\n    recipe: recipesReducer,\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<AnyAction>) {\n  return {\n    actions: bindActionCreators({ getRecipeFromAPI }, dispatch),\n  };\n}\n\nDetail.propTypes = {\n  recipe: PropTypes.shape({\n    meals: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n  actions: PropTypes.shape({\n    getRecipeFromAPI: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail);\n"]},"metadata":{},"sourceType":"module"}